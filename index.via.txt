// Autogenerated Vireo assembly file
// Generated on 06/27/2020 20:34:42
//---------------------------------------------------
//VI Definition: ::Web Server::Interactive::WebApp::index.gviweb
define (WebApp%3A%3Aindex%2Egviweb dv(.VirtualInstrument (
    Events: c(
        e(c( // Event Struct 0
            e(dv(c(
                e(.UInt32 eventSource)
                e(.UInt32 eventType)
                e(.UInt32 controlUID)
                e(.UInt32 dynamicIndex)
            ) (1000 2 16 0 ))local4)
        ))
    )
    Locals: c(   // Data Space
        e(dv(.String 'WebApp::index.gviweb')local5)
        ce(dv(c(
            ce(a(.Int32 *) UserInput)
            ce(.UInt32 PaneColor)
            ce(a(.UInt32 *) Sequence)
            ce(a(.Int32 *) RandNum)
            ce(.Int32 ForLoop-N)
            ce(.Int32 LastColorIndex)
            ce(.Boolean Pass%2FFail)
            ce(.String Message)
            ce(.Int32 SpecialWordIndex)
        ) (() 4278190080 () () 0 0 false '' 0 ))c15)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 1)c16)
        ce(dv(.String 'Hello, Welcome!\x0A\x0AHere is the instructions to play this Memory Game.\x0A\x0A1. The color sequence will be shown in the "Color Display"\x0A2. You need to observe the colors and its displaying order.\x0A3. And then you need to Choose the Colors in "Select Color" Panel in the same order.\x0A4. If you succeed, one more color will be added to the sequence & you will be moved to next stage.\x0A5. Else, the game will begin from stage 1.\x0A\x0APress OK to Start. Lets check your memory :)')c17)
        ce(dv(.String 'OK')c18)
        ce(dv(.ErrorCluster (true 0 '' ))c19)
        e(.ErrorCluster local20)
        e(.Boolean local21)
        e(.ErrorCluster local22)
        e(.Boolean local23)
        ce(dv(.Boolean false)c24)
        ce(dv(.Boolean true)c25)
        e(.ErrorCluster local26)
        e(.Boolean local27)
        e(.Int32 local28)
        e(.String local29)
        e(.ErrorCluster local30)
        e(.Int32 local31)
        e(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") local32)
        e(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") local33)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local43)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local53)
        de(dv(.Boolean false)dataItem_OK)
        e(.Boolean local55)
        ce(dv(.UInt32 100)c56)
        ce(dv(.Boolean false)c57)
        ce(dv(.Int64 0)c58)
        ce(dv(.Int64 1)c59)
        ce(dv(.Int64 2)c60)
        ce(dv(.Int64 3)c61)
        ce(dv(.Int64 4)c62)
        ce(dv(.Int64 5)c63)
        ce(dv(.String 'Hello, Welcome!\x0A\x0AHere is the instructions to play this Memory Game.\x0A1. The color sequence will be displayed in the color display at the top!\x0A2. You need to observe the colors and its displaying order.\x0A3. And then you need to select the colors in the same order in the bottom panel!\x0A\x0APress OK to Start. Lets check your memory :)')c64)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local74)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 0)c75)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 1)c76)
        e(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") local77)
        e(.JavaScriptStaticRefNum local78)
        ce(a(.Int32 *) c79)
        ce(dv(.Int32 0)c80)
        de(dv(.Int32 0)dataItem_Stage)
        e(.Int32 local82)
        ce(dv(.Int32 150)c83)
        ce(a(.UInt32 *) c84)
        ce(dv(.Int32 1)c85)
        ce(dv(.Int32 0)c86)
        ce(dv(.String '\x0A\x0AObserve the Color Sequence Playing in the \'Color Display\'.')c87)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 2)c88)
        de(.Int32 dataItem_InternalLSR0)
        e(.Int32 local90)
        e(.JavaScriptStaticRefNum local91)
        e(.ErrorCluster local92)
        e(.UInt32 local93)
        e(.ErrorCluster local94)
        e(.Boolean local95)
        e(.ErrorCluster local96)
        e(.ErrorCluster local97)
        e(.Boolean local98)
        ce(dv(.Boolean false)c99)
        ce(dv(.Boolean true)c100)
        e(.ErrorCluster local101)
        e(.Boolean local102)
        e(.Int32 local103)
        e(.String local104)
        e(.ErrorCluster local105)
        ce(dv(.Int32 0)c106)
        e(.Int32 local107)
        e(.Int32 local108)
        e(.Int32 local109)
        e(.Int32 local110)
        ce(dv(.Double 1)c111)
        ce(dv(.Double 10)c112)
        e(.Double local113)
        e(.Double local114)
        e(.Double local115)
        e(.Double local116)
        e(.Int32 local117)
        e(.Boolean local118)
        e(a(.Int32 *) local119)
        ce(a(.Int32 *) c120)
        e(a(.Int32 *) local121)
        e(.Int32 local122)
        e(.Int32 local123)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local133)
        ce(dv(.Boolean false)c134)
        ce(dv(.Boolean true)c135)
        e(.ErrorCluster local136)
        e(.Boolean local137)
        e(.Int32 local138)
        e(.String local139)
        e(.ErrorCluster local140)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local150)
        e(a(.Int32 *) local151)
        e(.Int32 local152)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 3)c153)
        ce(dv(.Int32 0)c154)
        e(.Int32 local155)
        e(.Int32 local156)
        e(.Int32 local157)
        ce(dv(.UInt32 4293794853)c158)
        ce(dv(.UInt32 4282614967)c159)
        ce(dv(.UInt32 4278190080)c160)
        ce(dv(.UInt32 4279833443)c161)
        ce(dv(.UInt32 4282038392)c162)
        ce(dv(.UInt32 4294684508)c163)
        ce(dv(.UInt32 4283257689)c164)
        ce(dv(.UInt32 4278219059)c165)
        ce(dv(.UInt32 4294963712)c166)
        ce(dv(.UInt32 4289700362)c167)
        e(a(.UInt32 *) local168)
        e(.UInt32 local169)
        e(a(.UInt32 *) local170)
        ce(a(.UInt32 *) c171)
        e(a(.UInt32 *) local172)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local182)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 4)c183)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local193)
        e(.Int32 local194)
        e(a(.UInt32 *) local195)
        e(.Int32 local196)
        e(.Int32 local197)
        e(.Int32 local198)
        ce(dv(.Int32 0)c199)
        e(.Int32 local200)
        e(.Int32 local201)
        e(.UInt32 local202)
        e(.JavaScriptStaticRefNum local203)
        ce(dv(.UInt32 500)c204)
        e(.JavaScriptStaticRefNum local205)
        e(.ErrorCluster local206)
        e(.ErrorCluster local207)
        e(.Boolean local208)
        ce(dv(.Boolean false)c209)
        ce(dv(.Boolean true)c210)
        e(.ErrorCluster local211)
        e(.Boolean local212)
        e(.Int32 local213)
        e(.String local214)
        e(.ErrorCluster local215)
        e(.UInt32 local216)
        e(.JavaScriptStaticRefNum local217)
        e(.JavaScriptStaticRefNum local218)
        e(.JavaScriptStaticRefNum local219)
        e(.ErrorCluster local220)
        e(.UInt32 local221)
        e(.ErrorCluster local222)
        e(.Boolean local223)
        ce(dv(.Boolean false)c224)
        ce(dv(.Boolean true)c225)
        e(.ErrorCluster local226)
        e(.Boolean local227)
        e(.Int32 local228)
        e(.String local229)
        e(.ErrorCluster local230)
        e(.JavaScriptStaticRefNum local231)
        e(.ErrorCluster local232)
        e(.ErrorCluster local233)
        e(.Boolean local234)
        ce(dv(.Boolean false)c235)
        ce(dv(.Boolean true)c236)
        e(.ErrorCluster local237)
        e(.Boolean local238)
        e(.Int32 local239)
        e(.String local240)
        e(.ErrorCluster local241)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local251)
        e(.Int32 local252)
        e(a(.Int32 *) local253)
        e(.Int32 local254)
        e(.Int32 local255)
        e(.Int32 local256)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 5)c257)
        ce(dv(.Double 0)c258)
        ce(dv(.Double 5)c259)
        ce(dv(.Double 5)c260)
        e(.Double local261)
        e(.Double local262)
        e(.Boolean local263)
        e(.Double local264)
        e(.Int32 local265)
        e(.JavaScriptStaticRefNum local266)
        ce(dv(.String 'reinitializeToDefault')c267)
        e(.ErrorCluster local268)
        e(.JavaScriptStaticRefNum local269)
        e(.ErrorCluster local270)
        e(.Boolean local271)
        ce(dv(.Boolean false)c272)
        ce(dv(.Boolean true)c273)
        e(.ErrorCluster local274)
        e(.Boolean local275)
        e(.Int32 local276)
        e(.String local277)
        e(.ErrorCluster local278)
        ce(dv(.Int32 0)c279)
        e(.Int32 local280)
        e(.Int32 local281)
        e(.Int32 local282)
        e(.Int32 local283)
        e(.Int32 local284)
        e(.String local285)
        ce(dv(.String 'You Need to Select ')c286)
        ce(dv(.String '\x0D\x0A')c287)
        ce(dv(.String '\x0D\x0A')c288)
        ce(dv(.String 'to Complete this stage.')c289)
        ce(dv(.String '\x0D\x0A')c290)
        ce(dv(.Int32 1)c291)
        e(.Boolean local292)
        ce(dv(.String ' Color')c293)
        ce(dv(.String ' Colors')c294)
        e(.String local295)
        e(.String local296)
        de(dv(.String '')dataItem_Message)
        e(.String local298)
        e(.JavaScriptStaticRefNum local299)
        ce(dv(.String 'reinitializeToDefault')c300)
        e(.ErrorCluster local301)
        e(.JavaScriptStaticRefNum local302)
        e(.ErrorCluster local303)
        e(.Boolean local304)
        ce(dv(.Boolean false)c305)
        ce(dv(.Boolean true)c306)
        e(.ErrorCluster local307)
        e(.Boolean local308)
        e(.Int32 local309)
        e(.String local310)
        e(.ErrorCluster local311)
        e(c(
            e(c(
                e(.Boolean %30)
                e(.Boolean %31)
                e(.Boolean %32)
                e(.Boolean %33)
                e(.Boolean %34)
                e(.Boolean %35)
                e(.Boolean %36)
                e(.Boolean %37)
                e(.Boolean %38)
                e(.Boolean %39)
            ) Old%20Value)
            e(c(
                e(.Boolean %30)
                e(.Boolean %31)
                e(.Boolean %32)
                e(.Boolean %33)
                e(.Boolean %34)
                e(.Boolean %35)
                e(.Boolean %36)
                e(.Boolean %37)
                e(.Boolean %38)
                e(.Boolean %39)
            ) New%20Value)
        ) %7BF3226E31-E688-4C58-AE1E-7ED6718409A1%7D_16) // Value changed
        e(.Int32 local335)
        e(c(
            e(.UInt32 Source)
            e(.UInt32 Type)
            e(.UInt32 Time)
            e(.UInt32 Index)
            e(.JavaScriptStaticRefNum Control%20Reference)
            e(c(
                e(.Boolean %30)
                e(.Boolean %31)
                e(.Boolean %32)
                e(.Boolean %33)
                e(.Boolean %34)
                e(.Boolean %35)
                e(.Boolean %36)
                e(.Boolean %37)
                e(.Boolean %38)
                e(.Boolean %39)
            ) Old%20Value)
            e(c(
                e(.Boolean %30)
                e(.Boolean %31)
                e(.Boolean %32)
                e(.Boolean %33)
                e(.Boolean %34)
                e(.Boolean %35)
                e(.Boolean %36)
                e(.Boolean %37)
                e(.Boolean %38)
                e(.Boolean %39)
            ) New%20Value)
        ) local363)
        e(.Int32 local364)
        e(c(
            e(.UInt32 Source)
            e(.UInt32 Type)
            e(.UInt32 Time)
            e(.UInt32 Index)
            e(.JavaScriptStaticRefNum Control%20Reference)
            e(c(
                e(.Boolean %30)
                e(.Boolean %31)
                e(.Boolean %32)
                e(.Boolean %33)
                e(.Boolean %34)
                e(.Boolean %35)
                e(.Boolean %36)
                e(.Boolean %37)
                e(.Boolean %38)
                e(.Boolean %39)
            ) Old%20Value)
            e(c(
                e(.Boolean %30)
                e(.Boolean %31)
                e(.Boolean %32)
                e(.Boolean %33)
                e(.Boolean %34)
                e(.Boolean %35)
                e(.Boolean %36)
                e(.Boolean %37)
                e(.Boolean %38)
                e(.Boolean %39)
            ) New%20Value)
        ) local392)
        e(c(
            e(.Boolean %30)
            e(.Boolean %31)
            e(.Boolean %32)
            e(.Boolean %33)
            e(.Boolean %34)
            e(.Boolean %35)
            e(.Boolean %36)
            e(.Boolean %37)
            e(.Boolean %38)
            e(.Boolean %39)
        ) local403)
        e(c(
            e(.Boolean %30)
            e(.Boolean %31)
            e(.Boolean %32)
            e(.Boolean %33)
            e(.Boolean %34)
            e(.Boolean %35)
            e(.Boolean %36)
            e(.Boolean %37)
            e(.Boolean %38)
            e(.Boolean %39)
        ) local414)
        de(dv(c(
            e(.Boolean %30)
            e(.Boolean %31)
            e(.Boolean %32)
            e(.Boolean %33)
            e(.Boolean %34)
            e(.Boolean %35)
            e(.Boolean %36)
            e(.Boolean %37)
            e(.Boolean %38)
            e(.Boolean %39)
        ) (false false false false false false false false false false ))dataItem_SelectColors)
        e(c(
            e(.Boolean %30)
            e(.Boolean %31)
            e(.Boolean %32)
            e(.Boolean %33)
            e(.Boolean %34)
            e(.Boolean %35)
            e(.Boolean %36)
            e(.Boolean %37)
            e(.Boolean %38)
            e(.Boolean %39)
        ) local436)
        e(a(.Boolean *) local437)
        e(.Int32 local438)
        ce(dv(.Int32 0)c439)
        e(.Int32 local440)
        e(.Int32 local441)
        e(.Boolean local442)
        ce(dv(.Int32 0)c443)
        e(.Int32 local444)
        e(.Boolean local445)
        ce(dv(.Boolean false)c446)
        ce(dv(c(
            ce(a(.Int32 *) UserInput)
            ce(.UInt32 PaneColor)
            ce(a(.UInt32 *) Sequence)
            ce(a(.Int32 *) RandNum)
            ce(.Int32 ForLoop-N)
            ce(.Int32 LastColorIndex)
            ce(.Boolean Pass%2FFail)
            ce(.String Message)
            ce(.Int32 SpecialWordIndex)
        ) (() 0 () () 0 0 false '' 0 ))c456)
        ce(dv(.Int32 0)c457)
        e(.Int32 local458)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local468)
        e(.Boolean local469)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local479)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local489)
        e(.Int32 local490)
        e(.Boolean local491)
        e(a(.Int32 *) local492)
        e(.Int32 local493)
        e(.Int32 local494)
        e(.Int32 local495)
        ce(dv(.Boolean false)c496)
        ce(dv(.Boolean true)c497)
        e(.String local498)
        ce(dv(.String 'Oops! That was wrong.\x0AThe Correct Color is ')c499)
        ce(dv(.String '.\x0A')c500)
        ce(dv(.Boolean false)c501)
        ce(dv(.String '\x0AHit on OK to Restart the Game!')c502)
        e(.String local503)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 1)c504)
        ce(dv(.String '\x0D\x0A')c505)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 3)c506)
        ce(dv(.String 'Lets add one more color in the sequence!\x0A\x0AHit on OK to Continue')c507)
        ce(dv(.String 'Amazing!')c508)
        ce(dv(.String 'You have a strong Memory!')c509)
        ce(dv(.String 'Fantastic!')c510)
        ce(dv(.String 'You are Champ!')c511)
        ce(dv(.String 'Awesome !')c512)
        ce(dv(.Boolean true)c513)
        ce(dv(.String 'Great !')c514)
        e(a(.String *) local515)
        e(.String local516)
        e(.String local517)
        e(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") local518)
        e(.String local519)
        e(.Boolean local520)
        e(.Boolean local521)
        e(.Int32 local522)
        e(.Int32 local523)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local533)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 5)c534)
        e(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") local535)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local545)
        e(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") local546)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local556)
        e(.Int32 local557)
        e(.String local558)
        e(.String local559)
        e(.Int32 local560)
        e(.UInt32 local561)
        e(.ErrorCluster local562)
        e(.Occurrence local563)
        e(dv(.String 'Hello, Welcome!\x0A\x0AHere is the instructions to play this Memory Game.\x0A\x0A1. The color sequence will be shown in the "Color Display"\x0A2. You need to observe the colors and its displaying order.\x0A3. And then you need to Choose the Colors in "Select Color" Panel in the same order.\x0A4. If you succeed, one more color will be added to the sequence & you will be moved to next stage.\x0A5. Else, the game will begin from stage 1.\x0A\x0APress OK to Start. Lets check your memory :)')local564)
        e(dv(.String 'OK')local565)
        e(.Boolean local566)
        e(.Boolean local567)
        e(.ErrorCluster local568)
        e(.Occurrence local569)
        ce(dv(.Int32 0)c570)
        ce(dv(.Boolean false)c571)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 0)c572)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 1)c573)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 2)c574)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 3)c575)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 4)c576)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 5)c577)
        e(.Occurrence local578)
        e(.ErrorCluster local579)
        e(dv(.UInt32 2)local580)
        e(.Occurrence local581)
        e(dv(.String 'BackgroundColor')local582)
        e(.ErrorCluster local583)
        e(.ErrorCluster local584)
        e(.Boolean local585)
        e(.Boolean local586)
        e(.ErrorCluster local587)
        e(.Occurrence local588)
        e(.Boolean local589)
        ce(dv(.Int32 0)c590)
        ce(a(.Int32 *) c591)
        e(.Boolean local592)
        e(.Boolean local593)
        e(.ErrorCluster local594)
        e(.Occurrence local595)
        e(.Boolean local596)
        ce(dv(.Int32 0)c597)
        ce(a(.UInt32 *) c598)
        e(.Boolean local599)
        ce(dv(.Int32 0)c600)
        e(.Occurrence local601)
        e(.ErrorCluster local602)
        e(dv(.UInt32 49)local603)
        e(.Occurrence local604)
        e(dv(.String 'FalseColor')local605)
        e(.ErrorCluster local606)
        e(dv(.String 'TrueColor')local607)
        e(.ErrorCluster local608)
        e(.Boolean local609)
        e(.Boolean local610)
        e(.ErrorCluster local611)
        e(.Occurrence local612)
        e(.Occurrence local613)
        e(.ErrorCluster local614)
        e(dv(.UInt32 2)local615)
        e(.Occurrence local616)
        e(.ErrorCluster local617)
        e(dv(.UInt32 49)local618)
        e(.Occurrence local619)
        e(dv(.String 'BackgroundColor')local620)
        e(.ErrorCluster local621)
        e(.Boolean local622)
        e(.Boolean local623)
        e(.ErrorCluster local624)
        e(.Occurrence local625)
        e(.Occurrence local626)
        e(dv(.String 'FalseColor')local627)
        e(.ErrorCluster local628)
        e(dv(.String 'TrueColor')local629)
        e(.ErrorCluster local630)
        e(.Boolean local631)
        e(.Boolean local632)
        e(.ErrorCluster local633)
        e(.Occurrence local634)
        e(dv(.Boolean false)local635)
        e(dv(.Boolean true)local636)
        e(.Occurrence local637)
        e(.ErrorCluster local638)
        e(dv(.UInt32 16)local639)
        e(.ErrorCluster local640)
        e(.Occurrence local641)
        e(dv(.String 'reinitializeToDefault')local642)
        e(.Boolean local643)
        e(.Boolean local644)
        e(.ErrorCluster local645)
        e(.Occurrence local646)
        e(.Boolean local647)
        ce(dv(.Int32 0)c648)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local658)
        e(dv(.Int32 0)local659)
        e(.Occurrence local660)
        e(.ErrorCluster local661)
        e(dv(.UInt32 16)local662)
        e(.ErrorCluster local663)
        e(.Occurrence local664)
        e(dv(.String 'reinitializeToDefault')local665)
        e(.Boolean local666)
        e(.Boolean local667)
        e(.ErrorCluster local668)
        e(.Occurrence local669)
        ce(dv(.Int32 0)c670)
        ce(dv(.Int32 0)c671)
        e(.JavaScriptStaticRefNum local672)
        e(.Occurrence local673)
        e(.ErrorCluster local674)
        e(dv(.UInt32 16)local675)
        ce(dv(.Int32 0)c676)
        ce(dv(.Int32 0)c677)
        ce(dv(.UInt32 2)c678)
        e(.Boolean local679)
        ce(dv(.Int32 0)c680)
        e(.Int32 local681)
        e(.Int32 local682)
        e(.Boolean local683)
        e(.Boolean local684)
        e(dv(.Int32 0)local685)
        ce(dv(.Int32 2147483647)c686)
    )
        clump(1
        JavaScriptInvoke(local578 true local579 'ControlReference_GetControlObject' local78 local5 local580)
        JavaScriptInvoke(local601 true local602 'ControlReference_GetControlObject' local203 local5 local603)
        JavaScriptInvoke(local613 true local614 'ControlReference_GetControlObject' local217 local5 local615)
        JavaScriptInvoke(local616 true local617 'ControlReference_GetControlObject' local218 local5 local618)
        JavaScriptInvoke(local637 true local638 'ControlReference_GetControlObject' local266 local5 local639)
        JavaScriptInvoke(local660 true local661 'ControlReference_GetControlObject' local299 local5 local662)
        JavaScriptInvoke(local673 true local674 'ControlReference_GetControlObject' local672 local5 local675)
        ConfigureEventSpecJSRef(c676 c677 local672)
        RegisterForJSEvent(local672 c678)
    Perch(3)
        Copy(local562 local20)
        JavaScriptInvoke(local563 true local20 'OneButtonDialog' local21 local564 local565)
        Copy(local20 local22)
        Copy(local22.status local23)
        Xor(c24 local23 local566)
        BranchIfFalse(1 local566)
        Xor(c25 local23 local567)
        BranchIfFalse(2 local567)
        Branch(3)
    Perch(1)
        Branch(0)
    Perch(2)
        Copy(local22 local26)
        Copy(local26.status local27)
        Copy(local26.code local28)
        Copy(local26.source local29)
        Copy(local568 local30)
        JavaScriptInvoke(local569 true * 'LogLabVIEWError' * local27 local28 local29)
        Branch(0)
    Perch(0)
        Copy(c16 local33)
        Copy(c15 local53)
        Copy(c570 local31)
    Perch(4)
        Copy(local53 local43)
        Copy(local33 local32)
        CopyAndReset(dataItem_OK local55 c571)
        Trigger(1)
        Trigger(2)
        Wait(1)
        Wait(2)
        Copy(local546 local33)
        Copy(local545 local53)
        BranchIfTrue(5 c57)
        BranchIfEQ(4 local31 c686)
        Increment(local31 local31 )
        Branch(4)
    Perch(5)
/* Clump Ended. */    )
    clump(1
        WaitMilliseconds(c56 * )
        // Code End
/* Clump Ended. */    )
    clump(1
        BranchIfEQ(1 local32 c572)
        BranchIfEQ(2 local32 c573)
        BranchIfEQ(3 local32 c574)
        BranchIfEQ(4 local32 c575)
        BranchIfEQ(5 local32 c576)
        BranchIfEQ(6 local32 c577)
        Branch(2)
    Perch(1)
        Copy(local43 local74)
        Copy(c64 local74.Message)
        BranchIfFalse(7 local55)
        Copy(c76 local77)
        Branch(8)
    Perch(7)
        Copy(c75 local77)
    Perch(8)
        Copy(local74 local545)
        Copy(local77 local546)
        Branch(0)
    Perch(2)
        Copy(c80 dataItem_Stage)
        Copy(dataItem_InternalLSR0 local90)
        Trigger(3)
        Trigger(4)
        Wait(3)
        Wait(4)
        Copy(local133 local545)
        Copy(c88 local546)
        Branch(0)
    Perch(3)
        Copy(local43 local150)
        Copy(local150.RandNum local151)
        ArrayLength(local151 local152 )
        IsGE(c154 local152 local596)
        BranchIfTrue(10 local596)
        Branch(11)
    Perch(11)
        Copy(c597 local155)
        Copy(local152 local156)
        Copy(c598 local170)
    Perch(12)
        ArrayIndex(local151 local157 local155 )
        ArrayConcatenate(local168 c167 c166 c165 c164 c163 c162 c161 c160 c159 c158 )
        ArrayIndex(local168 local169 local157 )
        ArrayConcatenate(local170 local170 local169 )
        Increment(local155 local155 )
        BranchIfGE(13 local155 local156)
        Branch(12)
    Perch(13)
        Copy(local170 local172)
        Branch(9)
    Perch(10)
        Copy(c171 local172)
        Branch(9)
    Perch(9)
        Copy(local43 local182)
        Copy(local172 local182.Sequence)
        Copy(local182 local545)
        Copy(c153 local546)
        Branch(0)
    Perch(4)
        Copy(local43 local193)
        Copy(local193.ForLoop-N local194)
        Copy(local193.Sequence local195)
        ArrayLength(local195 local196 )
        MaxAndMinElts(local196 local194 local198 local197 )
        IsGE(c199 local197 local599)
        BranchIfTrue(15 local599)
        Branch(16)
    Perch(16)
        Copy(c600 local200)
        Copy(local197 local201)
    Perch(17)
        ArrayIndex(local195 local202 local200 )
        Trigger(8)
        Trigger(9)
        Wait(8)
        Wait(9)
        Increment(local200 local200 )
        BranchIfGE(18 local200 local201)
        Branch(17)
    Perch(18)
        Branch(14)
    Perch(15)
        Branch(14)
    Perch(14)
        Copy(local217 local219)
        Copy(local621 local220)
        JavaScriptInvoke(local619 true local220 'PropertyNode_PropertyRead' local221 local217 local620)
        Copy(local220 local222)
        Copy(local222.status local223)
        Trigger(10)
        Trigger(11)
        Wait(10)
        Wait(11)
        Copy(local43 local545)
        Copy(c183 local546)
        Branch(0)
    Perch(5)
        Copy(local43 local251)
        Copy(local251.ForLoop-N local252)
        Copy(local251.RandNum local253)
        ArrayLength(local253 local254 )
        MaxAndMinElts(local254 local252 local256 local255 )
        Random(local261 )
        Mul(local261 c260 local262)
        InRangeAndCoerce(local262 c258 c259 local636 local635 local264 local263)
        Convert(local264 local265)
        Trigger(12)
        Trigger(13)
        Wait(12)
        Wait(13)
        Copy(local479 local545)
        Copy(c257 local546)
        Branch(0)
    Perch(6)
        Copy(local43 local489)
        Copy(local489.ForLoop-N local490)
        Copy(local489.Pass%2FFail local491)
        Copy(local489.RandNum local492)
        Copy(local489.LastColorIndex local493)
        Copy(local489.SpecialWordIndex local494)
        ArrayIndex(local492 local495 local493 )
        Xor(c496 local491 local683)
        BranchIfFalse(20 local683)
        Xor(c497 local491 local684)
        BranchIfFalse(21 local684)
        Branch(20)
    Perch(20)
        NumberToDecimalString(local495 local685 local498 )
        StringConcatenate(local503 c499 local498 c500 c502 )
        Copy(c504 local518)
        Copy(local503 local519)
        Copy(c501 local520)
        Branch(19)
    Perch(21)
        ArrayConcatenate(local515 c514 c512 c511 c510 c509 c508 )
        ArrayIndex(local515 local516 local494 )
        StringConcatenate(local517 local516 c505 c507 )
        Copy(c506 local518)
        Copy(local517 local519)
        Copy(c513 local520)
        Branch(19)
    Perch(19)
        And(local520 local55 local521)
        Increment(local490 local522 )
        BranchIfFalse(22 local521)
        Copy(local522 local523)
        Branch(23)
    Perch(22)
        Copy(local490 local523)
    Perch(23)
        Copy(local43 local533)
        Copy(local523 local533.ForLoop-N)
        Copy(local519 local533.Message)
        BranchIfFalse(24 local55)
        Copy(local518 local535)
        Branch(25)
    Perch(24)
        Copy(c534 local535)
    Perch(25)
        Copy(local533 local545)
        Copy(local535 local546)
        Branch(0)
    Perch(0)
        Copy(local545 local556)
        Copy(local556.ForLoop-N local557)
        Copy(local556.Message local558)
        Copy(local558 dataItem_Message)
        Copy(local557 dataItem_Stage)
        // Code End
/* Clump Ended. */    )
    clump(1
        IsGE(c106 c83 local589)
        BranchIfTrue(1 local589)
        Branch(2)
    Perch(2)
        Copy(local90 local110)
        Copy(c590 local107)
        Copy(c83 local108)
        Copy(c591 local119)
    Perch(3)
        Copy(local110 local109)
        Random(local113 )
        Mul(local113 c112 local114)
        Quotient(local114 c111 local115)
        Convert(local115 local117)
        IsNE(local117 local109 local118)
        BranchIfFalse(4 local118)
        ArrayConcatenate(local119 local119 local117 )
    Perch(4)
        Copy(local117 local110)
        Increment(local107 local107 )
        BranchIfGE(5 local107 local108)
        Branch(3)
    Perch(5)
        Copy(local119 local121)
        Copy(local117 local122)
        Branch(0)
    Perch(1)
        Copy(c120 local121)
        Copy(local90 local122)
        Branch(0)
    Perch(0)
        Copy(local122 dataItem_InternalLSR0)
        Trigger(5)
        Wait(5)
        // Code End
/* Clump Ended. */    )
    clump(1
        Copy(local78 local91)
        Copy(local583 local92)
        JavaScriptInvoke(local581 true local92 'PropertyNode_PropertyRead' local93 local78 local582)
        Copy(local92 local94)
        Copy(local94.status local95)
        Trigger(5)
        Trigger(6)
        Trigger(7)
        Wait(5)
        Wait(6)
        Wait(7)
        // Code End
/* Clump Ended. */    )
    clump(2
        Copy(local43 local133)
        Copy(c84 local133.Sequence)
        Copy(c79 local133.UserInput)
        Copy(local93 local133.PaneColor)
        Copy(local121 local133.RandNum)
        Copy(c85 local133.ForLoop-N)
        Copy(c86 local133.LastColorIndex)
        Copy(c87 local133.Message)
        // Code End
/* Clump Ended. */    )
    clump(1
    Perch(3)
        Xor(c134 local95 local592)
        BranchIfFalse(1 local592)
        Xor(c135 local95 local593)
        BranchIfFalse(2 local593)
        Branch(3)
    Perch(1)
        Branch(0)
    Perch(2)
        Copy(local94 local136)
        Copy(local136.status local137)
        Copy(local136.code local138)
        Copy(local136.source local139)
        Copy(local594 local140)
        JavaScriptInvoke(local595 true * 'LogLabVIEWError' * local137 local138 local139)
        Branch(0)
    Perch(0)
        // Code End
/* Clump Ended. */    )
    clump(1
    Perch(3)
        Copy(local584 local96)
        CloseReference(local91 local96)
        Copy(local96 local97)
        Copy(local97.status local98)
        Xor(c99 local98 local585)
        BranchIfFalse(1 local585)
        Xor(c100 local98 local586)
        BranchIfFalse(2 local586)
        Branch(3)
    Perch(1)
        Branch(0)
    Perch(2)
        Copy(local97 local101)
        Copy(local101.status local102)
        Copy(local101.code local103)
        Copy(local101.source local104)
        Copy(local587 local105)
        JavaScriptInvoke(local588 true * 'LogLabVIEWError' * local102 local103 local104)
        Branch(0)
    Perch(0)
        // Code End
/* Clump Ended. */    )
    clump(1
        WaitMilliseconds(c204 * )
        // Code End
/* Clump Ended. */    )
    clump(1
    Perch(3)
        Copy(local203 local205)
        Copy(local606 local206)
        JavaScriptInvoke(local604 true local206 'PropertyNode_PropertyWrite' * local203 local605 local202)
        Copy(local608 local206)
        JavaScriptInvoke(local604 true local206 'PropertyNode_PropertyWrite' * local203 local607 local202)
        Copy(local206 local207)
        Copy(local207.status local208)
        Xor(c209 local208 local609)
        BranchIfFalse(1 local609)
        Xor(c210 local208 local610)
        BranchIfFalse(2 local610)
        Branch(3)
    Perch(1)
        Branch(0)
    Perch(2)
        Copy(local207 local211)
        Copy(local211.status local212)
        Copy(local211.code local213)
        Copy(local211.source local214)
        Copy(local611 local215)
        JavaScriptInvoke(local612 true * 'LogLabVIEWError' * local212 local213 local214)
        Branch(0)
    Perch(0)
        // Code End
/* Clump Ended. */    )
    clump(1
    Perch(3)
        Copy(local218 local231)
        Copy(local628 local232)
        JavaScriptInvoke(local626 true local232 'PropertyNode_PropertyWrite' * local218 local627 local221)
        Copy(local630 local232)
        JavaScriptInvoke(local626 true local232 'PropertyNode_PropertyWrite' * local218 local629 local221)
        Copy(local232 local233)
        Copy(local233.status local234)
        Xor(c235 local234 local631)
        BranchIfFalse(1 local631)
        Xor(c236 local234 local632)
        BranchIfFalse(2 local632)
        Branch(3)
    Perch(1)
        Branch(0)
    Perch(2)
        Copy(local233 local237)
        Copy(local237.status local238)
        Copy(local237.code local239)
        Copy(local237.source local240)
        Copy(local633 local241)
        JavaScriptInvoke(local634 true * 'LogLabVIEWError' * local238 local239 local240)
        Branch(0)
    Perch(0)
        // Code End
/* Clump Ended. */    )
    clump(1
    Perch(3)
        Xor(c224 local223 local622)
        BranchIfFalse(1 local622)
        Xor(c225 local223 local623)
        BranchIfFalse(2 local623)
        Branch(3)
    Perch(1)
        Branch(0)
    Perch(2)
        Copy(local222 local226)
        Copy(local226.status local227)
        Copy(local226.code local228)
        Copy(local226.source local229)
        Copy(local624 local230)
        JavaScriptInvoke(local625 true * 'LogLabVIEWError' * local227 local228 local229)
        Branch(0)
    Perch(0)
        // Code End
/* Clump Ended. */    )
    clump(1
        IsGE(c279 local255 local647)
        BranchIfTrue(1 local647)
        Branch(2)
    Perch(2)
        Copy(local252 local284)
        Copy(c648 local280)
        Copy(local255 local281)
        Copy(local43 local658)
    Perch(3)
        ArrayIndex(local253 local282 local280 )
        Copy(local284 local283)
        NumberToDecimalString(local283 local659 local285 )
        IsEQ(local283 c291 local292)
        BranchIfFalse(4 local292)
        Copy(c293 local295)
        Branch(5)
    Perch(4)
        Copy(c294 local295)
    Perch(5)
        StringConcatenate(local296 c290 c286 c287 local285 local295 c288 c289 )
        Copy(local296 dataItem_Message)
        Trigger(14)
        Trigger(15)
        Wait(14)
        Wait(15)
        Copy(local364 local284)
        Copy(local280 local682)
        Increment(local280 local280 )
        BranchIfGE(6 local280 local281)
        BranchIfFalse(6 local445)
        Branch(3)
    Perch(6)
        Copy(local682 local458)
        Copy(local43 local468)
        Copy(local445 local469)
        Branch(0)
    Perch(1)
        Copy(c457 local458)
        Copy(c456 local468)
        Copy(c446 local469)
        Branch(0)
    Perch(0)
        Copy(local468 local479)
        Copy(local469 local479.Pass%2FFail)
        Copy(local458 local479.LastColorIndex)
        Copy(local265 local479.SpecialWordIndex)
        // Code End
/* Clump Ended. */    )
    clump(1
    Perch(3)
        Copy(local266 local269)
        Copy(local640 local268)
        JavaScriptInvoke(local641 true local268 'InvokeControlFunction' * local266 local642)
        Copy(local268 local270)
        Copy(local270.status local271)
        Xor(c272 local271 local643)
        BranchIfFalse(1 local643)
        Xor(c273 local271 local644)
        BranchIfFalse(2 local644)
        Branch(3)
    Perch(1)
        Branch(0)
    Perch(2)
        Copy(local270 local274)
        Copy(local274.status local275)
        Copy(local274.code local276)
        Copy(local274.source local277)
        Copy(local645 local278)
        JavaScriptInvoke(local646 true * 'LogLabVIEWError' * local275 local276 local277)
        Branch(0)
    Perch(0)
        // Code End
/* Clump Ended. */    )
    clump(1
        WaitForEventsAndDispatch(* * c670 c671 local363 1)
        Branch(0)
    Perch(1)
        Decrement(local283 local364 )
        Copy(local363 local392)
        Copy(local392.Old%20Value local403)
        Copy(local392.New%20Value local414)
        Copy(dataItem_SelectColors local436)
        Branch(0)
    Perch(0)
        ClusterToArray(local437 local436 )
        ArrayLength(local437 local438 )
        IsGE(c439 local438 local679)
        BranchIfTrue(3 local679)
        Branch(4)
    Perch(4)
        Copy(c680 local440)
        Copy(local438 local441)
    Perch(5)
        ArrayIndex(local437 local442 local440 )
        Copy(local440 local681)
        Increment(local440 local440 )
        BranchIfGE(6 local440 local441)
        BranchIfTrue(6 local442)
        Branch(5)
    Perch(6)
        Copy(local681 local444)
        Branch(2)
    Perch(3)
        Copy(c443 local444)
        Branch(2)
    Perch(2)
        IsEQ(local282 local444 local445)
        // Code End
/* Clump Ended. */    )
    clump(1
    Perch(3)
        Copy(local299 local302)
        Copy(local663 local301)
        JavaScriptInvoke(local664 true local301 'InvokeControlFunction' * local299 local665)
        Copy(local301 local303)
        Copy(local303.status local304)
        Xor(c305 local304 local666)
        BranchIfFalse(1 local666)
        Xor(c306 local304 local667)
        BranchIfFalse(2 local667)
        Branch(3)
    Perch(1)
        Branch(0)
    Perch(2)
        Copy(local303 local307)
        Copy(local307.status local308)
        Copy(local307.code local309)
        Copy(local307.source local310)
        Copy(local668 local311)
        JavaScriptInvoke(local669 true * 'LogLabVIEWError' * local308 local309 local310)
        Branch(0)
    Perch(0)
        // Code End
/* Clump Ended. */    )
)))
enqueue (WebApp%3A%3Aindex%2Egviweb)
//Finished!! :D
