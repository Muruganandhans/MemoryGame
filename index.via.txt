// Autogenerated Vireo assembly file
// Generated on 06/27/2020 21:05:11
//---------------------------------------------------
//VI Definition: ::Web Server::Interactive::WebApp::index.gviweb
define (WebApp%3A%3Aindex%2Egviweb dv(.VirtualInstrument (
    Events: c(
        e(c( // Event Struct 0
            e(dv(c(
                e(.UInt32 eventSource)
                e(.UInt32 eventType)
                e(.UInt32 controlUID)
                e(.UInt32 dynamicIndex)
            ) (1000 2 16 0 ))local4)
        ))
    )
    Locals: c(   // Data Space
        e(dv(.String 'WebApp::index.gviweb')local5)
        ce(dv(c(
            ce(a(.Int32 *) UserInput)
            ce(.UInt32 PaneColor)
            ce(a(.UInt32 *) Sequence)
            ce(a(.Int32 *) RandNum)
            ce(.Int32 ForLoop-N)
            ce(.Int32 LastColorIndex)
            ce(.Boolean Pass%2FFail)
            ce(.String Message)
            ce(.Int32 SpecialWordIndex)
        ) (() 4278190080 () () 0 0 false '' 0 ))c15)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 1)c16)
        ce(dv(.String 'Hello, Welcome!\x0A\x0AHere is the instructions to play this Memory Game.\x0A\x0A1. The color sequence will be shown in the "Color Display"\x0A2. You need to observe the colors and its displaying order.\x0A3. And then you need to Choose the Colors in "Select Color" Panel in the same order.\x0A4. If you succeed, one more color will be added to the sequence & you will be moved to next stage.\x0A5. Else, the game will begin from stage 1.\x0A\x0APress OK to Start. Lets check your memory :)')c17)
        ce(dv(.String 'OK')c18)
        ce(dv(.ErrorCluster (true 0 '' ))c19)
        e(.ErrorCluster local20)
        e(.Boolean local21)
        e(.ErrorCluster local22)
        e(.Boolean local23)
        ce(dv(.Boolean false)c24)
        ce(dv(.Boolean true)c25)
        e(.ErrorCluster local26)
        e(.Boolean local27)
        e(.Int32 local28)
        e(.String local29)
        e(.ErrorCluster local30)
        e(.Int32 local31)
        e(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") local32)
        e(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") local33)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local43)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local53)
        de(dv(.Boolean false)dataItem_OK)
        e(.Boolean local55)
        ce(dv(.UInt32 100)c56)
        ce(dv(.Boolean false)c57)
        ce(dv(.Int64 0)c58)
        ce(dv(.Int64 1)c59)
        ce(dv(.Int64 2)c60)
        ce(dv(.Int64 3)c61)
        ce(dv(.Int64 4)c62)
        ce(dv(.Int64 5)c63)
        ce(dv(.String 'Hello, Welcome!\x0A\x0AHere is the instructions to play this Memory Game.\x0A1. The color sequence will be displayed in the color display at the top!\x0A2. You need to observe the colors and its displaying order.\x0A3. And then you need to select the colors in the same order in the bottom panel!\x0A\x0APress OK to Start. Lets check your memory :)')c64)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local74)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 0)c75)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 1)c76)
        e(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") local77)
        e(.JavaScriptStaticRefNum local78)
        ce(a(.Int32 *) c79)
        ce(dv(.Int32 0)c80)
        de(dv(.Int32 0)dataItem_Stage)
        e(.Int32 local82)
        ce(dv(.Int32 150)c83)
        ce(a(.UInt32 *) c84)
        ce(dv(.Int32 1)c85)
        ce(dv(.Int32 0)c86)
        ce(dv(.String '\x0A\x0AObserve the Color Sequence Playing in the \'Color Display\'.')c87)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 2)c88)
        de(.Int32 dataItem_InternalLSR0)
        e(.Int32 local90)
        e(.JavaScriptStaticRefNum local91)
        e(.ErrorCluster local92)
        e(.UInt32 local93)
        e(.ErrorCluster local94)
        e(.Boolean local95)
        e(.ErrorCluster local96)
        e(.ErrorCluster local97)
        e(.Boolean local98)
        ce(dv(.Boolean false)c99)
        ce(dv(.Boolean true)c100)
        e(.ErrorCluster local101)
        e(.Boolean local102)
        e(.Int32 local103)
        e(.String local104)
        e(.ErrorCluster local105)
        ce(dv(.Int32 0)c106)
        e(.Int32 local107)
        e(.Int32 local108)
        e(.Int32 local109)
        e(.Int32 local110)
        ce(dv(.Double 1)c111)
        ce(dv(.Double 10)c112)
        e(.Double local113)
        e(.Double local114)
        e(.Double local115)
        e(.Double local116)
        e(.Int32 local117)
        e(.Boolean local118)
        e(a(.Int32 *) local119)
        ce(a(.Int32 *) c120)
        e(a(.Int32 *) local121)
        e(.Int32 local122)
        e(.Int32 local123)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local133)
        ce(dv(.Boolean false)c134)
        ce(dv(.Boolean true)c135)
        e(.ErrorCluster local136)
        e(.Boolean local137)
        e(.Int32 local138)
        e(.String local139)
        e(.ErrorCluster local140)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local150)
        e(a(.Int32 *) local151)
        e(.Int32 local152)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 3)c153)
        ce(dv(.Int32 0)c154)
        e(.Int32 local155)
        e(.Int32 local156)
        e(.Int32 local157)
        ce(dv(.UInt32 4293794853)c158)
        ce(dv(.UInt32 4282614967)c159)
        ce(dv(.UInt32 4278190080)c160)
        ce(dv(.UInt32 4279833443)c161)
        ce(dv(.UInt32 4282038392)c162)
        ce(dv(.UInt32 4294684508)c163)
        ce(dv(.UInt32 4283257689)c164)
        ce(dv(.UInt32 4278219059)c165)
        ce(dv(.UInt32 4294963712)c166)
        ce(dv(.UInt32 4289700362)c167)
        e(a(.UInt32 *) local168)
        e(.UInt32 local169)
        e(a(.UInt32 *) local170)
        ce(a(.UInt32 *) c171)
        e(a(.UInt32 *) local172)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local182)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 4)c183)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local193)
        e(.Int32 local194)
        e(a(.UInt32 *) local195)
        e(.Int32 local196)
        e(.Int32 local197)
        e(.Int32 local198)
        ce(dv(.Int32 0)c199)
        e(.Int32 local200)
        e(.Int32 local201)
        e(.UInt32 local202)
        e(.JavaScriptStaticRefNum local203)
        ce(dv(.UInt32 500)c204)
        e(.JavaScriptStaticRefNum local205)
        e(.ErrorCluster local206)
        e(.ErrorCluster local207)
        e(.Boolean local208)
        ce(dv(.Boolean false)c209)
        ce(dv(.Boolean true)c210)
        e(.ErrorCluster local211)
        e(.Boolean local212)
        e(.Int32 local213)
        e(.String local214)
        e(.ErrorCluster local215)
        e(.UInt32 local216)
        e(.JavaScriptStaticRefNum local217)
        e(.JavaScriptStaticRefNum local218)
        e(.JavaScriptStaticRefNum local219)
        e(.ErrorCluster local220)
        e(.UInt32 local221)
        e(.ErrorCluster local222)
        e(.Boolean local223)
        ce(dv(.Boolean false)c224)
        ce(dv(.Boolean true)c225)
        e(.ErrorCluster local226)
        e(.Boolean local227)
        e(.Int32 local228)
        e(.String local229)
        e(.ErrorCluster local230)
        e(.JavaScriptStaticRefNum local231)
        e(.ErrorCluster local232)
        e(.ErrorCluster local233)
        e(.Boolean local234)
        ce(dv(.Boolean false)c235)
        ce(dv(.Boolean true)c236)
        e(.ErrorCluster local237)
        e(.Boolean local238)
        e(.Int32 local239)
        e(.String local240)
        e(.ErrorCluster local241)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local251)
        e(.Int32 local252)
        e(a(.Int32 *) local253)
        e(.Int32 local254)
        e(.Int32 local255)
        e(.Int32 local256)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 5)c257)
        ce(dv(.Double 0)c258)
        ce(dv(.Double 5)c259)
        ce(dv(.Double 5)c260)
        e(.Double local261)
        e(.Double local262)
        e(.Boolean local263)
        e(.Double local264)
        e(.Int32 local265)
        e(.JavaScriptStaticRefNum local266)
        ce(dv(.String 'reinitializeToDefault')c267)
        e(.ErrorCluster local268)
        e(.JavaScriptStaticRefNum local269)
        e(.ErrorCluster local270)
        e(.Boolean local271)
        ce(dv(.Boolean false)c272)
        ce(dv(.Boolean true)c273)
        e(.ErrorCluster local274)
        e(.Boolean local275)
        e(.Int32 local276)
        e(.String local277)
        e(.ErrorCluster local278)
        ce(dv(.Int32 0)c279)
        e(.Int32 local280)
        e(.Int32 local281)
        e(.Int32 local282)
        e(.Int32 local283)
        e(.Int32 local284)
        e(.String local285)
        ce(dv(.String 'You Need to Select ')c286)
        ce(dv(.String '\x0D\x0A')c287)
        ce(dv(.String '\x0D\x0A')c288)
        ce(dv(.String 'to Complete this stage.')c289)
        ce(dv(.String '\x0D\x0A')c290)
        ce(dv(.Int32 1)c291)
        e(.Boolean local292)
        ce(dv(.String ' Color')c293)
        ce(dv(.String ' Colors')c294)
        e(.String local295)
        e(.String local296)
        de(dv(.String '')dataItem_Message)
        e(.String local298)
        ce(dv(.Boolean false)c299)
        e(.JavaScriptStaticRefNum local300)
        ce(dv(.String 'reinitializeToDefault')c301)
        e(.JavaScriptStaticRefNum local302)
        e(.ErrorCluster local303)
        e(.ErrorCluster local304)
        e(.Boolean local305)
        ce(dv(.Boolean false)c306)
        ce(dv(.Boolean true)c307)
        e(.ErrorCluster local308)
        e(.Boolean local309)
        e(.Int32 local310)
        e(.String local311)
        e(.ErrorCluster local312)
        e(.ErrorCluster local313)
        e(.JavaScriptStaticRefNum local314)
        e(.ErrorCluster local315)
        e(.Boolean local316)
        ce(dv(.Boolean false)c317)
        ce(dv(.Boolean true)c318)
        e(.ErrorCluster local319)
        e(.Boolean local320)
        e(.Int32 local321)
        e(.String local322)
        e(.ErrorCluster local323)
        e(c(
            e(c(
                e(.Boolean %30)
                e(.Boolean %31)
                e(.Boolean %32)
                e(.Boolean %33)
                e(.Boolean %34)
                e(.Boolean %35)
                e(.Boolean %36)
                e(.Boolean %37)
                e(.Boolean %38)
                e(.Boolean %39)
            ) Old%20Value)
            e(c(
                e(.Boolean %30)
                e(.Boolean %31)
                e(.Boolean %32)
                e(.Boolean %33)
                e(.Boolean %34)
                e(.Boolean %35)
                e(.Boolean %36)
                e(.Boolean %37)
                e(.Boolean %38)
                e(.Boolean %39)
            ) New%20Value)
        ) %7BF3226E31-E688-4C58-AE1E-7ED6718409A1%7D_16) // Value changed
        e(.Int32 local347)
        e(c(
            e(.UInt32 Source)
            e(.UInt32 Type)
            e(.UInt32 Time)
            e(.UInt32 Index)
            e(.JavaScriptStaticRefNum Control%20Reference)
            e(c(
                e(.Boolean %30)
                e(.Boolean %31)
                e(.Boolean %32)
                e(.Boolean %33)
                e(.Boolean %34)
                e(.Boolean %35)
                e(.Boolean %36)
                e(.Boolean %37)
                e(.Boolean %38)
                e(.Boolean %39)
            ) Old%20Value)
            e(c(
                e(.Boolean %30)
                e(.Boolean %31)
                e(.Boolean %32)
                e(.Boolean %33)
                e(.Boolean %34)
                e(.Boolean %35)
                e(.Boolean %36)
                e(.Boolean %37)
                e(.Boolean %38)
                e(.Boolean %39)
            ) New%20Value)
        ) local375)
        e(.Int32 local376)
        e(c(
            e(.UInt32 Source)
            e(.UInt32 Type)
            e(.UInt32 Time)
            e(.UInt32 Index)
            e(.JavaScriptStaticRefNum Control%20Reference)
            e(c(
                e(.Boolean %30)
                e(.Boolean %31)
                e(.Boolean %32)
                e(.Boolean %33)
                e(.Boolean %34)
                e(.Boolean %35)
                e(.Boolean %36)
                e(.Boolean %37)
                e(.Boolean %38)
                e(.Boolean %39)
            ) Old%20Value)
            e(c(
                e(.Boolean %30)
                e(.Boolean %31)
                e(.Boolean %32)
                e(.Boolean %33)
                e(.Boolean %34)
                e(.Boolean %35)
                e(.Boolean %36)
                e(.Boolean %37)
                e(.Boolean %38)
                e(.Boolean %39)
            ) New%20Value)
        ) local404)
        e(c(
            e(.Boolean %30)
            e(.Boolean %31)
            e(.Boolean %32)
            e(.Boolean %33)
            e(.Boolean %34)
            e(.Boolean %35)
            e(.Boolean %36)
            e(.Boolean %37)
            e(.Boolean %38)
            e(.Boolean %39)
        ) local415)
        e(c(
            e(.Boolean %30)
            e(.Boolean %31)
            e(.Boolean %32)
            e(.Boolean %33)
            e(.Boolean %34)
            e(.Boolean %35)
            e(.Boolean %36)
            e(.Boolean %37)
            e(.Boolean %38)
            e(.Boolean %39)
        ) local426)
        de(dv(c(
            e(.Boolean %30)
            e(.Boolean %31)
            e(.Boolean %32)
            e(.Boolean %33)
            e(.Boolean %34)
            e(.Boolean %35)
            e(.Boolean %36)
            e(.Boolean %37)
            e(.Boolean %38)
            e(.Boolean %39)
        ) (false false false false false false false false false false ))dataItem_SelectColors)
        e(c(
            e(.Boolean %30)
            e(.Boolean %31)
            e(.Boolean %32)
            e(.Boolean %33)
            e(.Boolean %34)
            e(.Boolean %35)
            e(.Boolean %36)
            e(.Boolean %37)
            e(.Boolean %38)
            e(.Boolean %39)
        ) local448)
        e(a(.Boolean *) local449)
        e(.Int32 local450)
        ce(dv(.Int32 0)c451)
        e(.Int32 local452)
        e(.Int32 local453)
        e(.Boolean local454)
        ce(dv(.Int32 0)c455)
        e(.Int32 local456)
        e(.Boolean local457)
        ce(dv(.Boolean false)c458)
        ce(dv(c(
            ce(a(.Int32 *) UserInput)
            ce(.UInt32 PaneColor)
            ce(a(.UInt32 *) Sequence)
            ce(a(.Int32 *) RandNum)
            ce(.Int32 ForLoop-N)
            ce(.Int32 LastColorIndex)
            ce(.Boolean Pass%2FFail)
            ce(.String Message)
            ce(.Int32 SpecialWordIndex)
        ) (() 0 () () 0 0 false '' 0 ))c468)
        ce(dv(.Int32 0)c469)
        e(.Int32 local470)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local480)
        e(.Boolean local481)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local491)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local501)
        e(.Int32 local502)
        e(.Boolean local503)
        e(a(.Int32 *) local504)
        e(.Int32 local505)
        e(.Int32 local506)
        e(.Int32 local507)
        ce(dv(.Boolean false)c508)
        ce(dv(.Boolean true)c509)
        e(.String local510)
        ce(dv(.String 'Oops! That was wrong.\x0AThe Correct Color is ')c511)
        ce(dv(.String '.\x0A')c512)
        ce(dv(.Boolean false)c513)
        ce(dv(.String '\x0AHit on OK to Restart the Game!')c514)
        e(.String local515)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 1)c516)
        ce(dv(.String '\x0D\x0A')c517)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 3)c518)
        ce(dv(.String 'Lets add one more color in the sequence!\x0A\x0AHit on OK to Continue')c519)
        ce(dv(.String 'Amazing!')c520)
        ce(dv(.String 'You have a strong Memory!')c521)
        ce(dv(.String 'Fantastic!')c522)
        ce(dv(.String 'You are Champ!')c523)
        ce(dv(.String 'Awesome !')c524)
        ce(dv(.Boolean true)c525)
        ce(dv(.String 'Great !')c526)
        e(a(.String *) local527)
        e(.String local528)
        e(.String local529)
        e(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") local530)
        e(.String local531)
        e(.Boolean local532)
        e(.Boolean local533)
        e(.Int32 local534)
        e(.Int32 local535)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local545)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 5)c546)
        e(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") local547)
        ce(dv(.Boolean true)c548)
        e(.JavaScriptStaticRefNum local549)
        e(.JavaScriptStaticRefNum local550)
        e(.ErrorCluster local551)
        e(.ErrorCluster local552)
        e(.Boolean local553)
        ce(dv(.Boolean false)c554)
        ce(dv(.Boolean true)c555)
        e(.ErrorCluster local556)
        e(.Boolean local557)
        e(.Int32 local558)
        e(.String local559)
        e(.ErrorCluster local560)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local570)
        e(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") local571)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local581)
        e(.Int32 local582)
        e(.String local583)
        e(.String local584)
        e(.Int32 local585)
        e(.UInt32 local586)
        e(.ErrorCluster local587)
        e(.Occurrence local588)
        e(dv(.String 'Hello, Welcome!\x0A\x0AHere is the instructions to play this Memory Game.\x0A\x0A1. The color sequence will be shown in the "Color Display"\x0A2. You need to observe the colors and its displaying order.\x0A3. And then you need to Choose the Colors in "Select Color" Panel in the same order.\x0A4. If you succeed, one more color will be added to the sequence & you will be moved to next stage.\x0A5. Else, the game will begin from stage 1.\x0A\x0APress OK to Start. Lets check your memory :)')local589)
        e(dv(.String 'OK')local590)
        e(.Boolean local591)
        e(.Boolean local592)
        e(.ErrorCluster local593)
        e(.Occurrence local594)
        ce(dv(.Int32 0)c595)
        ce(dv(.Boolean false)c596)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 0)c597)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 1)c598)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 2)c599)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 3)c600)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 4)c601)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 5)c602)
        e(.Occurrence local603)
        e(.ErrorCluster local604)
        e(dv(.UInt32 2)local605)
        e(.Occurrence local606)
        e(dv(.String 'BackgroundColor')local607)
        e(.ErrorCluster local608)
        e(.ErrorCluster local609)
        e(.Boolean local610)
        e(.Boolean local611)
        e(.ErrorCluster local612)
        e(.Occurrence local613)
        e(.Boolean local614)
        ce(dv(.Int32 0)c615)
        ce(a(.Int32 *) c616)
        e(.Boolean local617)
        e(.Boolean local618)
        e(.ErrorCluster local619)
        e(.Occurrence local620)
        e(.Boolean local621)
        ce(dv(.Int32 0)c622)
        ce(a(.UInt32 *) c623)
        e(.Boolean local624)
        ce(dv(.Int32 0)c625)
        e(.Occurrence local626)
        e(.ErrorCluster local627)
        e(dv(.UInt32 49)local628)
        e(.Occurrence local629)
        e(dv(.String 'FalseColor')local630)
        e(.ErrorCluster local631)
        e(dv(.String 'TrueColor')local632)
        e(.ErrorCluster local633)
        e(.Boolean local634)
        e(.Boolean local635)
        e(.ErrorCluster local636)
        e(.Occurrence local637)
        e(.Occurrence local638)
        e(.ErrorCluster local639)
        e(dv(.UInt32 2)local640)
        e(.Occurrence local641)
        e(.ErrorCluster local642)
        e(dv(.UInt32 49)local643)
        e(.Occurrence local644)
        e(dv(.String 'BackgroundColor')local645)
        e(.ErrorCluster local646)
        e(.Boolean local647)
        e(.Boolean local648)
        e(.ErrorCluster local649)
        e(.Occurrence local650)
        e(.Occurrence local651)
        e(dv(.String 'FalseColor')local652)
        e(.ErrorCluster local653)
        e(dv(.String 'TrueColor')local654)
        e(.ErrorCluster local655)
        e(.Boolean local656)
        e(.Boolean local657)
        e(.ErrorCluster local658)
        e(.Occurrence local659)
        e(dv(.Boolean false)local660)
        e(dv(.Boolean true)local661)
        e(.Occurrence local662)
        e(.ErrorCluster local663)
        e(dv(.UInt32 16)local664)
        e(.ErrorCluster local665)
        e(.Occurrence local666)
        e(dv(.String 'reinitializeToDefault')local667)
        e(.Boolean local668)
        e(.Boolean local669)
        e(.ErrorCluster local670)
        e(.Occurrence local671)
        e(.Boolean local672)
        ce(dv(.Int32 0)c673)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local683)
        e(dv(.Int32 0)local684)
        e(.Occurrence local685)
        e(.ErrorCluster local686)
        e(dv(.UInt32 16)local687)
        e(.Occurrence local688)
        e(dv(.String 'Disabled')local689)
        e(dv(.Boolean false)local690)
        e(.ErrorCluster local691)
        e(.Boolean local692)
        e(.Boolean local693)
        e(.ErrorCluster local694)
        e(.Occurrence local695)
        e(.ErrorCluster local696)
        e(.Occurrence local697)
        e(dv(.String 'reinitializeToDefault')local698)
        e(.Boolean local699)
        e(.Boolean local700)
        e(.ErrorCluster local701)
        e(.Occurrence local702)
        ce(dv(.Int32 0)c703)
        ce(dv(.Int32 0)c704)
        e(.JavaScriptStaticRefNum local705)
        e(.Occurrence local706)
        e(.ErrorCluster local707)
        e(dv(.UInt32 16)local708)
        ce(dv(.Int32 0)c709)
        ce(dv(.Int32 0)c710)
        ce(dv(.UInt32 2)c711)
        e(.Boolean local712)
        ce(dv(.Int32 0)c713)
        e(.Int32 local714)
        e(.Int32 local715)
        e(.Boolean local716)
        e(.Boolean local717)
        e(dv(.Int32 0)local718)
        e(.Occurrence local719)
        e(.ErrorCluster local720)
        e(dv(.UInt32 16)local721)
        e(.Occurrence local722)
        e(dv(.String 'Disabled')local723)
        e(dv(.Boolean true)local724)
        e(.ErrorCluster local725)
        e(.Boolean local726)
        e(.Boolean local727)
        e(.ErrorCluster local728)
        e(.Occurrence local729)
        ce(dv(.Int32 2147483647)c730)
    )
        clump(1
        JavaScriptInvoke(local603 true local604 'ControlReference_GetControlObject' local78 local5 local605)
        JavaScriptInvoke(local626 true local627 'ControlReference_GetControlObject' local203 local5 local628)
        JavaScriptInvoke(local638 true local639 'ControlReference_GetControlObject' local217 local5 local640)
        JavaScriptInvoke(local641 true local642 'ControlReference_GetControlObject' local218 local5 local643)
        JavaScriptInvoke(local662 true local663 'ControlReference_GetControlObject' local266 local5 local664)
        JavaScriptInvoke(local685 true local686 'ControlReference_GetControlObject' local300 local5 local687)
        JavaScriptInvoke(local706 true local707 'ControlReference_GetControlObject' local705 local5 local708)
        ConfigureEventSpecJSRef(c709 c710 local705)
        RegisterForJSEvent(local705 c711)
        JavaScriptInvoke(local719 true local720 'ControlReference_GetControlObject' local549 local5 local721)
    Perch(3)
        Copy(local587 local20)
        JavaScriptInvoke(local588 true local20 'OneButtonDialog' local21 local589 local590)
        Copy(local20 local22)
        Copy(local22.status local23)
        Xor(c24 local23 local591)
        BranchIfFalse(1 local591)
        Xor(c25 local23 local592)
        BranchIfFalse(2 local592)
        Branch(3)
    Perch(1)
        Branch(0)
    Perch(2)
        Copy(local22 local26)
        Copy(local26.status local27)
        Copy(local26.code local28)
        Copy(local26.source local29)
        Copy(local593 local30)
        JavaScriptInvoke(local594 true * 'LogLabVIEWError' * local27 local28 local29)
        Branch(0)
    Perch(0)
        Copy(c16 local33)
        Copy(c15 local53)
        Copy(c595 local31)
    Perch(4)
        Copy(local53 local43)
        Copy(local33 local32)
        CopyAndReset(dataItem_OK local55 c596)
        Trigger(1)
        Trigger(2)
        Wait(1)
        Wait(2)
        Copy(local571 local33)
        Copy(local570 local53)
        BranchIfTrue(5 c57)
        BranchIfEQ(4 local31 c730)
        Increment(local31 local31 )
        Branch(4)
    Perch(5)
/* Clump Ended. */    )
    clump(1
        WaitMilliseconds(c56 * )
        // Code End
/* Clump Ended. */    )
    clump(1
    Perch(29)
        BranchIfEQ(1 local32 c597)
        BranchIfEQ(2 local32 c598)
        BranchIfEQ(3 local32 c599)
        BranchIfEQ(4 local32 c600)
        BranchIfEQ(5 local32 c601)
        BranchIfEQ(6 local32 c602)
        Branch(2)
    Perch(1)
        Copy(local43 local74)
        Copy(c64 local74.Message)
        BranchIfFalse(7 local55)
        Copy(c76 local77)
        Branch(8)
    Perch(7)
        Copy(c75 local77)
    Perch(8)
        Copy(local74 local570)
        Copy(local77 local571)
        Branch(0)
    Perch(2)
        Copy(c80 dataItem_Stage)
        Copy(dataItem_InternalLSR0 local90)
        Trigger(3)
        Trigger(4)
        Wait(3)
        Wait(4)
        Copy(local133 local570)
        Copy(c88 local571)
        Branch(0)
    Perch(3)
        Copy(local43 local150)
        Copy(local150.RandNum local151)
        ArrayLength(local151 local152 )
        IsGE(c154 local152 local621)
        BranchIfTrue(10 local621)
        Branch(11)
    Perch(11)
        Copy(c622 local155)
        Copy(local152 local156)
        Copy(c623 local170)
    Perch(12)
        ArrayIndex(local151 local157 local155 )
        ArrayConcatenate(local168 c167 c166 c165 c164 c163 c162 c161 c160 c159 c158 )
        ArrayIndex(local168 local169 local157 )
        ArrayConcatenate(local170 local170 local169 )
        Increment(local155 local155 )
        BranchIfGE(13 local155 local156)
        Branch(12)
    Perch(13)
        Copy(local170 local172)
        Branch(9)
    Perch(10)
        Copy(c171 local172)
        Branch(9)
    Perch(9)
        Copy(local43 local182)
        Copy(local172 local182.Sequence)
        Copy(local182 local570)
        Copy(c153 local571)
        Branch(0)
    Perch(4)
        Copy(local43 local193)
        Copy(local193.ForLoop-N local194)
        Copy(local193.Sequence local195)
        ArrayLength(local195 local196 )
        MaxAndMinElts(local196 local194 local198 local197 )
        IsGE(c199 local197 local624)
        BranchIfTrue(15 local624)
        Branch(16)
    Perch(16)
        Copy(c625 local200)
        Copy(local197 local201)
    Perch(17)
        ArrayIndex(local195 local202 local200 )
        Trigger(8)
        Trigger(9)
        Wait(8)
        Wait(9)
        Increment(local200 local200 )
        BranchIfGE(18 local200 local201)
        Branch(17)
    Perch(18)
        Branch(14)
    Perch(15)
        Branch(14)
    Perch(14)
        Copy(local217 local219)
        Copy(local646 local220)
        JavaScriptInvoke(local644 true local220 'PropertyNode_PropertyRead' local221 local217 local645)
        Copy(local220 local222)
        Copy(local222.status local223)
        Trigger(10)
        Trigger(11)
        Wait(10)
        Wait(11)
        Copy(local43 local570)
        Copy(c183 local571)
        Branch(0)
    Perch(5)
        Copy(local43 local251)
        Copy(local251.ForLoop-N local252)
        Copy(local251.RandNum local253)
        ArrayLength(local253 local254 )
        MaxAndMinElts(local254 local252 local256 local255 )
        Random(local261 )
        Mul(local261 c260 local262)
        InRangeAndCoerce(local262 c258 c259 local661 local660 local264 local263)
        Convert(local264 local265)
        Trigger(12)
        Trigger(13)
        Wait(12)
        Wait(13)
        Copy(local491 local570)
        Copy(c257 local571)
        Branch(0)
    Perch(6)
        Copy(local43 local501)
        Copy(local501.ForLoop-N local502)
        Copy(local501.Pass%2FFail local503)
        Copy(local501.RandNum local504)
        Copy(local501.LastColorIndex local505)
        Copy(local501.SpecialWordIndex local506)
        ArrayIndex(local504 local507 local505 )
        Xor(c508 local503 local716)
        BranchIfFalse(20 local716)
        Xor(c509 local503 local717)
        BranchIfFalse(21 local717)
        Branch(20)
    Perch(20)
        NumberToDecimalString(local507 local718 local510 )
        StringConcatenate(local515 c511 local510 c512 c514 )
        Copy(c516 local530)
        Copy(local515 local531)
        Copy(c513 local532)
        Branch(19)
    Perch(21)
        ArrayConcatenate(local527 c526 c524 c523 c522 c521 c520 )
        ArrayIndex(local527 local528 local506 )
        StringConcatenate(local529 local528 c517 c519 )
        Copy(c518 local530)
        Copy(local529 local531)
        Copy(c525 local532)
        Branch(19)
    Perch(19)
        And(local532 local55 local533)
        Increment(local502 local534 )
        BranchIfFalse(22 local533)
        Copy(local534 local535)
        Branch(23)
    Perch(22)
        Copy(local502 local535)
    Perch(23)
        Copy(local43 local545)
        Copy(local535 local545.ForLoop-N)
        Copy(local531 local545.Message)
        BranchIfFalse(24 local55)
        Copy(local530 local547)
        Branch(25)
    Perch(24)
        Copy(c546 local547)
    Perch(25)
        Copy(local549 local550)
        Copy(local725 local551)
        JavaScriptInvoke(local722 true local551 'PropertyNode_PropertyWrite' * local549 local723 local724)
        Copy(local551 local552)
        Copy(local552.status local553)
        Xor(c554 local553 local726)
        BranchIfFalse(27 local726)
        Xor(c555 local553 local727)
        BranchIfFalse(28 local727)
        Branch(29)
    Perch(27)
        Branch(26)
    Perch(28)
        Copy(local552 local556)
        Copy(local556.status local557)
        Copy(local556.code local558)
        Copy(local556.source local559)
        Copy(local728 local560)
        JavaScriptInvoke(local729 true * 'LogLabVIEWError' * local557 local558 local559)
        Branch(26)
    Perch(26)
        Copy(local545 local570)
        Copy(local547 local571)
        Branch(0)
    Perch(0)
        Copy(local570 local581)
        Copy(local581.ForLoop-N local582)
        Copy(local581.Message local583)
        Copy(local583 dataItem_Message)
        Copy(local582 dataItem_Stage)
        // Code End
/* Clump Ended. */    )
    clump(1
        IsGE(c106 c83 local614)
        BranchIfTrue(1 local614)
        Branch(2)
    Perch(2)
        Copy(local90 local110)
        Copy(c615 local107)
        Copy(c83 local108)
        Copy(c616 local119)
    Perch(3)
        Copy(local110 local109)
        Random(local113 )
        Mul(local113 c112 local114)
        Quotient(local114 c111 local115)
        Convert(local115 local117)
        IsNE(local117 local109 local118)
        BranchIfFalse(4 local118)
        ArrayConcatenate(local119 local119 local117 )
    Perch(4)
        Copy(local117 local110)
        Increment(local107 local107 )
        BranchIfGE(5 local107 local108)
        Branch(3)
    Perch(5)
        Copy(local119 local121)
        Copy(local117 local122)
        Branch(0)
    Perch(1)
        Copy(c120 local121)
        Copy(local90 local122)
        Branch(0)
    Perch(0)
        Copy(local122 dataItem_InternalLSR0)
        Trigger(5)
        Wait(5)
        // Code End
/* Clump Ended. */    )
    clump(1
        Copy(local78 local91)
        Copy(local608 local92)
        JavaScriptInvoke(local606 true local92 'PropertyNode_PropertyRead' local93 local78 local607)
        Copy(local92 local94)
        Copy(local94.status local95)
        Trigger(5)
        Trigger(6)
        Trigger(7)
        Wait(5)
        Wait(6)
        Wait(7)
        // Code End
/* Clump Ended. */    )
    clump(2
        Copy(local43 local133)
        Copy(c84 local133.Sequence)
        Copy(c79 local133.UserInput)
        Copy(local93 local133.PaneColor)
        Copy(local121 local133.RandNum)
        Copy(c85 local133.ForLoop-N)
        Copy(c86 local133.LastColorIndex)
        Copy(c87 local133.Message)
        // Code End
/* Clump Ended. */    )
    clump(1
    Perch(3)
        Xor(c134 local95 local617)
        BranchIfFalse(1 local617)
        Xor(c135 local95 local618)
        BranchIfFalse(2 local618)
        Branch(3)
    Perch(1)
        Branch(0)
    Perch(2)
        Copy(local94 local136)
        Copy(local136.status local137)
        Copy(local136.code local138)
        Copy(local136.source local139)
        Copy(local619 local140)
        JavaScriptInvoke(local620 true * 'LogLabVIEWError' * local137 local138 local139)
        Branch(0)
    Perch(0)
        // Code End
/* Clump Ended. */    )
    clump(1
    Perch(3)
        Copy(local609 local96)
        CloseReference(local91 local96)
        Copy(local96 local97)
        Copy(local97.status local98)
        Xor(c99 local98 local610)
        BranchIfFalse(1 local610)
        Xor(c100 local98 local611)
        BranchIfFalse(2 local611)
        Branch(3)
    Perch(1)
        Branch(0)
    Perch(2)
        Copy(local97 local101)
        Copy(local101.status local102)
        Copy(local101.code local103)
        Copy(local101.source local104)
        Copy(local612 local105)
        JavaScriptInvoke(local613 true * 'LogLabVIEWError' * local102 local103 local104)
        Branch(0)
    Perch(0)
        // Code End
/* Clump Ended. */    )
    clump(1
        WaitMilliseconds(c204 * )
        // Code End
/* Clump Ended. */    )
    clump(1
    Perch(3)
        Copy(local203 local205)
        Copy(local631 local206)
        JavaScriptInvoke(local629 true local206 'PropertyNode_PropertyWrite' * local203 local630 local202)
        Copy(local633 local206)
        JavaScriptInvoke(local629 true local206 'PropertyNode_PropertyWrite' * local203 local632 local202)
        Copy(local206 local207)
        Copy(local207.status local208)
        Xor(c209 local208 local634)
        BranchIfFalse(1 local634)
        Xor(c210 local208 local635)
        BranchIfFalse(2 local635)
        Branch(3)
    Perch(1)
        Branch(0)
    Perch(2)
        Copy(local207 local211)
        Copy(local211.status local212)
        Copy(local211.code local213)
        Copy(local211.source local214)
        Copy(local636 local215)
        JavaScriptInvoke(local637 true * 'LogLabVIEWError' * local212 local213 local214)
        Branch(0)
    Perch(0)
        // Code End
/* Clump Ended. */    )
    clump(1
    Perch(3)
        Copy(local218 local231)
        Copy(local653 local232)
        JavaScriptInvoke(local651 true local232 'PropertyNode_PropertyWrite' * local218 local652 local221)
        Copy(local655 local232)
        JavaScriptInvoke(local651 true local232 'PropertyNode_PropertyWrite' * local218 local654 local221)
        Copy(local232 local233)
        Copy(local233.status local234)
        Xor(c235 local234 local656)
        BranchIfFalse(1 local656)
        Xor(c236 local234 local657)
        BranchIfFalse(2 local657)
        Branch(3)
    Perch(1)
        Branch(0)
    Perch(2)
        Copy(local233 local237)
        Copy(local237.status local238)
        Copy(local237.code local239)
        Copy(local237.source local240)
        Copy(local658 local241)
        JavaScriptInvoke(local659 true * 'LogLabVIEWError' * local238 local239 local240)
        Branch(0)
    Perch(0)
        // Code End
/* Clump Ended. */    )
    clump(1
    Perch(3)
        Xor(c224 local223 local647)
        BranchIfFalse(1 local647)
        Xor(c225 local223 local648)
        BranchIfFalse(2 local648)
        Branch(3)
    Perch(1)
        Branch(0)
    Perch(2)
        Copy(local222 local226)
        Copy(local226.status local227)
        Copy(local226.code local228)
        Copy(local226.source local229)
        Copy(local649 local230)
        JavaScriptInvoke(local650 true * 'LogLabVIEWError' * local227 local228 local229)
        Branch(0)
    Perch(0)
        // Code End
/* Clump Ended. */    )
    clump(1
        IsGE(c279 local255 local672)
        BranchIfTrue(1 local672)
        Branch(2)
    Perch(2)
        Copy(local252 local284)
        Copy(c673 local280)
        Copy(local255 local281)
        Copy(local43 local683)
    Perch(3)
        ArrayIndex(local253 local282 local280 )
        Copy(local284 local283)
        NumberToDecimalString(local283 local684 local285 )
        IsEQ(local283 c291 local292)
        BranchIfFalse(4 local292)
        Copy(c293 local295)
        Branch(5)
    Perch(4)
        Copy(c294 local295)
    Perch(5)
        StringConcatenate(local296 c290 c286 c287 local285 local295 c288 c289 )
        Copy(local296 dataItem_Message)
        Trigger(14)
        Trigger(15)
        Wait(14)
        Wait(15)
        Copy(local376 local284)
        Copy(local280 local715)
        Increment(local280 local280 )
        BranchIfGE(6 local280 local281)
        BranchIfFalse(6 local457)
        Branch(3)
    Perch(6)
        Copy(local715 local470)
        Copy(local43 local480)
        Copy(local457 local481)
        Branch(0)
    Perch(1)
        Copy(c469 local470)
        Copy(c468 local480)
        Copy(c458 local481)
        Branch(0)
    Perch(0)
        Copy(local480 local491)
        Copy(local481 local491.Pass%2FFail)
        Copy(local470 local491.LastColorIndex)
        Copy(local265 local491.SpecialWordIndex)
        // Code End
/* Clump Ended. */    )
    clump(1
    Perch(3)
        Copy(local266 local269)
        Copy(local665 local268)
        JavaScriptInvoke(local666 true local268 'InvokeControlFunction' * local266 local667)
        Copy(local268 local270)
        Copy(local270.status local271)
        Xor(c272 local271 local668)
        BranchIfFalse(1 local668)
        Xor(c273 local271 local669)
        BranchIfFalse(2 local669)
        Branch(3)
    Perch(1)
        Branch(0)
    Perch(2)
        Copy(local270 local274)
        Copy(local274.status local275)
        Copy(local274.code local276)
        Copy(local274.source local277)
        Copy(local670 local278)
        JavaScriptInvoke(local671 true * 'LogLabVIEWError' * local275 local276 local277)
        Branch(0)
    Perch(0)
        // Code End
/* Clump Ended. */    )
    clump(1
        WaitForEventsAndDispatch(* * c703 c704 local375 1)
        Branch(0)
    Perch(1)
        Decrement(local283 local376 )
        Copy(local375 local404)
        Copy(local404.Old%20Value local415)
        Copy(local404.New%20Value local426)
        Copy(dataItem_SelectColors local448)
        Branch(0)
    Perch(0)
        ClusterToArray(local449 local448 )
        ArrayLength(local449 local450 )
        IsGE(c451 local450 local712)
        BranchIfTrue(3 local712)
        Branch(4)
    Perch(4)
        Copy(c713 local452)
        Copy(local450 local453)
    Perch(5)
        ArrayIndex(local449 local454 local452 )
        Copy(local452 local714)
        Increment(local452 local452 )
        BranchIfGE(6 local452 local453)
        BranchIfTrue(6 local454)
        Branch(5)
    Perch(6)
        Copy(local714 local456)
        Branch(2)
    Perch(3)
        Copy(c455 local456)
        Branch(2)
    Perch(2)
        IsEQ(local282 local456 local457)
        // Code End
/* Clump Ended. */    )
    clump(1
        Trigger(16)
        Trigger(17)
        Wait(16)
        Wait(17)
        // Code End
/* Clump Ended. */    )
    clump(1
    Perch(3)
        Copy(local300 local314)
        Copy(local696 local313)
        JavaScriptInvoke(local697 true local313 'InvokeControlFunction' * local300 local698)
        Copy(local313 local315)
        Copy(local315.status local316)
        Xor(c317 local316 local699)
        BranchIfFalse(1 local699)
        Xor(c318 local316 local700)
        BranchIfFalse(2 local700)
        Branch(3)
    Perch(1)
        Branch(0)
    Perch(2)
        Copy(local315 local319)
        Copy(local319.status local320)
        Copy(local319.code local321)
        Copy(local319.source local322)
        Copy(local701 local323)
        JavaScriptInvoke(local702 true * 'LogLabVIEWError' * local320 local321 local322)
        Branch(0)
    Perch(0)
        // Code End
/* Clump Ended. */    )
    clump(1
    Perch(3)
        Copy(local300 local302)
        Copy(local691 local303)
        JavaScriptInvoke(local688 true local303 'PropertyNode_PropertyWrite' * local300 local689 local690)
        Copy(local303 local304)
        Copy(local304.status local305)
        Xor(c306 local305 local692)
        BranchIfFalse(1 local692)
        Xor(c307 local305 local693)
        BranchIfFalse(2 local693)
        Branch(3)
    Perch(1)
        Branch(0)
    Perch(2)
        Copy(local304 local308)
        Copy(local308.status local309)
        Copy(local308.code local310)
        Copy(local308.source local311)
        Copy(local694 local312)
        JavaScriptInvoke(local695 true * 'LogLabVIEWError' * local309 local310 local311)
        Branch(0)
    Perch(0)
        // Code End
/* Clump Ended. */    )
)))
enqueue (WebApp%3A%3Aindex%2Egviweb)
//Finished!! :D
