// Autogenerated Vireo assembly file
// Generated on 06/27/2020 18:38:41
//---------------------------------------------------
//VI Definition: ::Web Server::Interactive::WebApp::index.gviweb
define (WebApp%3A%3Aindex%2Egviweb dv(.VirtualInstrument (
    Events: c(
        e(c( // Event Struct 0
            e(dv(c(
                e(.UInt32 eventSource)
                e(.UInt32 eventType)
                e(.UInt32 controlUID)
                e(.UInt32 dynamicIndex)
            ) (1000 2 4 0 ))local4)
        ))
    )
    Locals: c(   // Data Space
        e(dv(.String 'WebApp::index.gviweb')local5)
        ce(dv(c(
            ce(a(.Int32 *) UserInput)
            ce(.UInt32 PaneColor)
            ce(a(.UInt32 *) Sequence)
            ce(a(.Int32 *) RandNum)
            ce(.Int32 ForLoop-N)
            ce(.Int32 LastColorIndex)
            ce(.Boolean Pass%2FFail)
            ce(.String Message)
            ce(.Int32 SpecialWordIndex)
        ) (() 4278190080 () () 0 0 false '' 0 ))c15)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 1)c16)
        ce(dv(.String 'Hello, Welcome!\x0A\x0AHere is the instructions to play this Memory Game.\x0A\x0A1. The color sequence will be shown in the "Color Display"\x0A2. You need to observe the colors and its displaying order.\x0A3. And then you need to Choose the Colors in "Select Color" Panel in the same order.\x0A4. If you succeed, one more color will be added to the sequence & you will be moved to next stage & .\x0A5. Else, the game will begin from stage 1.\x0A\x0APress OK to Start. Lets check your memory :)')c17)
        ce(dv(.String 'OK')c18)
        ce(dv(.ErrorCluster (true 0 '' ))c19)
        e(.ErrorCluster local20)
        e(.Boolean local21)
        e(.ErrorCluster local22)
        e(.Boolean local23)
        ce(dv(.Boolean false)c24)
        ce(dv(.Boolean true)c25)
        e(.ErrorCluster local26)
        e(.Boolean local27)
        e(.Int32 local28)
        e(.String local29)
        e(.ErrorCluster local30)
        e(.Int32 local31)
        e(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") local32)
        e(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") local33)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local43)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local53)
        de(dv(.Boolean false)dataItem_OK)
        e(.Boolean local55)
        ce(dv(.UInt32 100)c56)
        ce(dv(.Boolean false)c57)
        ce(dv(.Int64 0)c58)
        ce(dv(.Int64 1)c59)
        ce(dv(.Int64 2)c60)
        ce(dv(.Int64 3)c61)
        ce(dv(.Int64 4)c62)
        ce(dv(.Int64 5)c63)
        ce(dv(.String 'Hello, Welcome!\x0A\x0AHere is the instructions to play this Memory Game.\x0A1. The color sequence will be displayed in the color display at the top!\x0A2. You need to observe the colors and its displaying order.\x0A3. And then you need to select the colors in the same order in the bottom panel!\x0A\x0APress OK to Start. Lets check your memory :)')c64)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local74)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 0)c75)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 1)c76)
        e(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") local77)
        e(.JavaScriptStaticRefNum local78)
        ce(a(.Int32 *) c79)
        ce(dv(.Int32 0)c80)
        de(dv(.Int32 0)dataItem_Stage)
        e(.Int32 local82)
        ce(dv(.Int32 150)c83)
        ce(a(.UInt32 *) c84)
        ce(dv(.Int32 1)c85)
        ce(dv(.Int32 0)c86)
        ce(dv(.String '\x0A\x0AObserve the Color Sequence Playing in the \'Color Display\'.')c87)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 2)c88)
        de(.Int32 dataItem_InternalLSR0)
        e(.Int32 local90)
        e(.JavaScriptStaticRefNum local91)
        e(.ErrorCluster local92)
        e(.UInt32 local93)
        e(.ErrorCluster local94)
        e(.Boolean local95)
        e(.ErrorCluster local96)
        e(.ErrorCluster local97)
        e(.Boolean local98)
        ce(dv(.Boolean false)c99)
        ce(dv(.Boolean true)c100)
        e(.ErrorCluster local101)
        e(.Boolean local102)
        e(.Int32 local103)
        e(.String local104)
        e(.ErrorCluster local105)
        ce(dv(.Int32 0)c106)
        e(.Int32 local107)
        e(.Int32 local108)
        e(.Int32 local109)
        e(.Int32 local110)
        ce(dv(.Double 1)c111)
        ce(dv(.Double 10)c112)
        e(.Double local113)
        e(.Double local114)
        e(.Double local115)
        e(.Double local116)
        e(.Int32 local117)
        e(.Boolean local118)
        e(a(.Int32 *) local119)
        ce(a(.Int32 *) c120)
        e(a(.Int32 *) local121)
        e(.Int32 local122)
        e(.Int32 local123)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local133)
        ce(dv(.Boolean false)c134)
        ce(dv(.Boolean true)c135)
        e(.ErrorCluster local136)
        e(.Boolean local137)
        e(.Int32 local138)
        e(.String local139)
        e(.ErrorCluster local140)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local150)
        e(a(.Int32 *) local151)
        e(.Int32 local152)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 3)c153)
        ce(dv(.Int32 0)c154)
        e(.Int32 local155)
        e(.Int32 local156)
        e(.Int32 local157)
        ce(dv(.UInt32 4293794853)c158)
        ce(dv(.UInt32 4282614967)c159)
        ce(dv(.UInt32 4278190080)c160)
        ce(dv(.UInt32 4279833443)c161)
        ce(dv(.UInt32 4282038392)c162)
        ce(dv(.UInt32 4294684508)c163)
        ce(dv(.UInt32 4283257689)c164)
        ce(dv(.UInt32 4278219059)c165)
        ce(dv(.UInt32 4294963712)c166)
        ce(dv(.UInt32 4289700362)c167)
        e(a(.UInt32 *) local168)
        e(.UInt32 local169)
        e(a(.UInt32 *) local170)
        ce(a(.UInt32 *) c171)
        e(a(.UInt32 *) local172)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local182)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 4)c183)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local193)
        e(.Int32 local194)
        e(a(.UInt32 *) local195)
        e(.Int32 local196)
        e(.Int32 local197)
        e(.Int32 local198)
        ce(dv(.Int32 0)c199)
        e(.Int32 local200)
        e(.Int32 local201)
        e(.UInt32 local202)
        e(.JavaScriptStaticRefNum local203)
        ce(dv(.UInt32 500)c204)
        e(.JavaScriptStaticRefNum local205)
        e(.ErrorCluster local206)
        e(.ErrorCluster local207)
        e(.Boolean local208)
        ce(dv(.Boolean false)c209)
        ce(dv(.Boolean true)c210)
        e(.ErrorCluster local211)
        e(.Boolean local212)
        e(.Int32 local213)
        e(.String local214)
        e(.ErrorCluster local215)
        e(.UInt32 local216)
        e(.JavaScriptStaticRefNum local217)
        e(.JavaScriptStaticRefNum local218)
        e(.JavaScriptStaticRefNum local219)
        e(.ErrorCluster local220)
        e(.UInt32 local221)
        e(.ErrorCluster local222)
        e(.Boolean local223)
        ce(dv(.Boolean false)c224)
        ce(dv(.Boolean true)c225)
        e(.ErrorCluster local226)
        e(.Boolean local227)
        e(.Int32 local228)
        e(.String local229)
        e(.ErrorCluster local230)
        e(.JavaScriptStaticRefNum local231)
        e(.ErrorCluster local232)
        e(.ErrorCluster local233)
        e(.Boolean local234)
        ce(dv(.Boolean false)c235)
        ce(dv(.Boolean true)c236)
        e(.ErrorCluster local237)
        e(.Boolean local238)
        e(.Int32 local239)
        e(.String local240)
        e(.ErrorCluster local241)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local251)
        e(.Int32 local252)
        e(a(.Int32 *) local253)
        e(.Int32 local254)
        e(.Int32 local255)
        e(.Int32 local256)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 5)c257)
        ce(dv(.Double 0)c258)
        ce(dv(.Double 5)c259)
        ce(dv(.Double 5)c260)
        e(.Double local261)
        e(.Double local262)
        e(.Boolean local263)
        e(.Double local264)
        e(.Int32 local265)
        e(.JavaScriptStaticRefNum local266)
        ce(dv(.String 'reinitializeToDefault')c267)
        e(.ErrorCluster local268)
        e(.JavaScriptStaticRefNum local269)
        e(.ErrorCluster local270)
        e(.Boolean local271)
        ce(dv(.Boolean false)c272)
        ce(dv(.Boolean true)c273)
        e(.ErrorCluster local274)
        e(.Boolean local275)
        e(.Int32 local276)
        e(.String local277)
        e(.ErrorCluster local278)
        ce(dv(.Int32 0)c279)
        e(.Int32 local280)
        e(.Int32 local281)
        e(.Int32 local282)
        e(.Int32 local283)
        e(.Int32 local284)
        de(dv(.Int32 0)dataItem_ColorCounts)
        e(.Int32 local286)
        e(.JavaScriptStaticRefNum local287)
        ce(dv(.String 'reinitializeToDefault')c288)
        e(.ErrorCluster local289)
        e(.JavaScriptStaticRefNum local290)
        e(.ErrorCluster local291)
        e(.Boolean local292)
        ce(dv(.Boolean false)c293)
        ce(dv(.Boolean true)c294)
        e(.ErrorCluster local295)
        e(.Boolean local296)
        e(.Int32 local297)
        e(.String local298)
        e(.ErrorCluster local299)
        e(c(
            e(c(
                e(.Boolean %30)
                e(.Boolean %31)
                e(.Boolean %32)
                e(.Boolean %33)
                e(.Boolean %34)
                e(.Boolean %35)
                e(.Boolean %36)
                e(.Boolean %37)
                e(.Boolean %38)
                e(.Boolean %39)
            ) Old%20Value)
            e(c(
                e(.Boolean %30)
                e(.Boolean %31)
                e(.Boolean %32)
                e(.Boolean %33)
                e(.Boolean %34)
                e(.Boolean %35)
                e(.Boolean %36)
                e(.Boolean %37)
                e(.Boolean %38)
                e(.Boolean %39)
            ) New%20Value)
        ) %7BF3226E31-E688-4C58-AE1E-7ED6718409A1%7D_4) // Value changed
        e(.Int32 local323)
        e(c(
            e(.UInt32 Source)
            e(.UInt32 Type)
            e(.UInt32 Time)
            e(.UInt32 Index)
            e(.JavaScriptStaticRefNum Control%20Reference)
            e(c(
                e(.Boolean %30)
                e(.Boolean %31)
                e(.Boolean %32)
                e(.Boolean %33)
                e(.Boolean %34)
                e(.Boolean %35)
                e(.Boolean %36)
                e(.Boolean %37)
                e(.Boolean %38)
                e(.Boolean %39)
            ) Old%20Value)
            e(c(
                e(.Boolean %30)
                e(.Boolean %31)
                e(.Boolean %32)
                e(.Boolean %33)
                e(.Boolean %34)
                e(.Boolean %35)
                e(.Boolean %36)
                e(.Boolean %37)
                e(.Boolean %38)
                e(.Boolean %39)
            ) New%20Value)
        ) local351)
        e(.Int32 local352)
        e(c(
            e(.UInt32 Source)
            e(.UInt32 Type)
            e(.UInt32 Time)
            e(.UInt32 Index)
            e(.JavaScriptStaticRefNum Control%20Reference)
            e(c(
                e(.Boolean %30)
                e(.Boolean %31)
                e(.Boolean %32)
                e(.Boolean %33)
                e(.Boolean %34)
                e(.Boolean %35)
                e(.Boolean %36)
                e(.Boolean %37)
                e(.Boolean %38)
                e(.Boolean %39)
            ) Old%20Value)
            e(c(
                e(.Boolean %30)
                e(.Boolean %31)
                e(.Boolean %32)
                e(.Boolean %33)
                e(.Boolean %34)
                e(.Boolean %35)
                e(.Boolean %36)
                e(.Boolean %37)
                e(.Boolean %38)
                e(.Boolean %39)
            ) New%20Value)
        ) local380)
        e(c(
            e(.Boolean %30)
            e(.Boolean %31)
            e(.Boolean %32)
            e(.Boolean %33)
            e(.Boolean %34)
            e(.Boolean %35)
            e(.Boolean %36)
            e(.Boolean %37)
            e(.Boolean %38)
            e(.Boolean %39)
        ) local391)
        e(c(
            e(.Boolean %30)
            e(.Boolean %31)
            e(.Boolean %32)
            e(.Boolean %33)
            e(.Boolean %34)
            e(.Boolean %35)
            e(.Boolean %36)
            e(.Boolean %37)
            e(.Boolean %38)
            e(.Boolean %39)
        ) local402)
        de(dv(c(
            e(.Boolean %30)
            e(.Boolean %31)
            e(.Boolean %32)
            e(.Boolean %33)
            e(.Boolean %34)
            e(.Boolean %35)
            e(.Boolean %36)
            e(.Boolean %37)
            e(.Boolean %38)
            e(.Boolean %39)
        ) (false false false false false false false false false false ))dataItem_SelectColors)
        e(c(
            e(.Boolean %30)
            e(.Boolean %31)
            e(.Boolean %32)
            e(.Boolean %33)
            e(.Boolean %34)
            e(.Boolean %35)
            e(.Boolean %36)
            e(.Boolean %37)
            e(.Boolean %38)
            e(.Boolean %39)
        ) local424)
        e(a(.Boolean *) local425)
        e(.Int32 local426)
        ce(dv(.Int32 0)c427)
        e(.Int32 local428)
        e(.Int32 local429)
        e(.Boolean local430)
        ce(dv(.Int32 0)c431)
        e(.Int32 local432)
        e(.Boolean local433)
        ce(dv(.Boolean false)c434)
        ce(dv(c(
            ce(a(.Int32 *) UserInput)
            ce(.UInt32 PaneColor)
            ce(a(.UInt32 *) Sequence)
            ce(a(.Int32 *) RandNum)
            ce(.Int32 ForLoop-N)
            ce(.Int32 LastColorIndex)
            ce(.Boolean Pass%2FFail)
            ce(.String Message)
            ce(.Int32 SpecialWordIndex)
        ) (() 0 () () 0 0 false '' 0 ))c444)
        ce(dv(.Int32 0)c445)
        e(.Int32 local446)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local456)
        e(.Boolean local457)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local467)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local477)
        e(.Int32 local478)
        e(.Boolean local479)
        e(a(.Int32 *) local480)
        e(.Int32 local481)
        e(.Int32 local482)
        e(.Int32 local483)
        ce(dv(.Boolean false)c484)
        ce(dv(.Boolean true)c485)
        e(.String local486)
        ce(dv(.String 'Oops! That was wrong.\x0AThe Correct Color is ')c487)
        ce(dv(.String '.\x0A')c488)
        ce(dv(.Boolean false)c489)
        ce(dv(.String '\x0D\x0A')c490)
        ce(dv(.String '\x0AHit on OK to Restart the Game!')c491)
        e(.String local492)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 1)c493)
        ce(dv(.String '\x0D\x0A')c494)
        ce(dv(.String '\x0D\x0A')c495)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 3)c496)
        ce(dv(.String 'Lets add one more color in the sequence!\x0A\x0AHit on OK to Continue')c497)
        ce(dv(.String 'Amazing!')c498)
        ce(dv(.String 'You have a strong Memory!')c499)
        ce(dv(.String 'Fantastic!')c500)
        ce(dv(.String 'You are Champ!')c501)
        ce(dv(.String 'Awesome !')c502)
        ce(dv(.Boolean true)c503)
        ce(dv(.String 'Great !')c504)
        e(a(.String *) local505)
        e(.String local506)
        e(.String local507)
        e(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") local508)
        e(.String local509)
        e(.Boolean local510)
        e(.Boolean local511)
        e(.Int32 local512)
        e(.Int32 local513)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local523)
        ce(dv(.Int32 0)c524)
        e(.Int32 local525)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 5)c526)
        e(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") local527)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local537)
        e(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") local538)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local548)
        e(.Int32 local549)
        e(.String local550)
        de(dv(.String '')dataItem_MessageToPlayer)
        e(.String local552)
        e(.Int32 local553)
        e(.Int32 local554)
        e(.UInt32 local555)
        e(.ErrorCluster local556)
        e(.Occurrence local557)
        e(dv(.String 'Hello, Welcome!\x0A\x0AHere is the instructions to play this Memory Game.\x0A\x0A1. The color sequence will be shown in the "Color Display"\x0A2. You need to observe the colors and its displaying order.\x0A3. And then you need to Choose the Colors in "Select Color" Panel in the same order.\x0A4. If you succeed, one more color will be added to the sequence & you will be moved to next stage & .\x0A5. Else, the game will begin from stage 1.\x0A\x0APress OK to Start. Lets check your memory :)')local558)
        e(dv(.String 'OK')local559)
        e(.Boolean local560)
        e(.Boolean local561)
        e(.ErrorCluster local562)
        e(.Occurrence local563)
        ce(dv(.Int32 0)c564)
        ce(dv(.Boolean false)c565)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 0)c566)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 1)c567)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 2)c568)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 3)c569)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 4)c570)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 5)c571)
        e(.Occurrence local572)
        e(.ErrorCluster local573)
        e(dv(.UInt32 2)local574)
        e(.Occurrence local575)
        e(dv(.String 'BackgroundColor')local576)
        e(.ErrorCluster local577)
        e(.ErrorCluster local578)
        e(.Boolean local579)
        e(.Boolean local580)
        e(.ErrorCluster local581)
        e(.Occurrence local582)
        e(.Boolean local583)
        ce(dv(.Int32 0)c584)
        ce(a(.Int32 *) c585)
        e(.Boolean local586)
        e(.Boolean local587)
        e(.ErrorCluster local588)
        e(.Occurrence local589)
        e(.Boolean local590)
        ce(dv(.Int32 0)c591)
        ce(a(.UInt32 *) c592)
        e(.Boolean local593)
        ce(dv(.Int32 0)c594)
        e(.Occurrence local595)
        e(.ErrorCluster local596)
        e(dv(.UInt32 37)local597)
        e(.Occurrence local598)
        e(dv(.String 'FalseColor')local599)
        e(.ErrorCluster local600)
        e(dv(.String 'TrueColor')local601)
        e(.ErrorCluster local602)
        e(.Boolean local603)
        e(.Boolean local604)
        e(.ErrorCluster local605)
        e(.Occurrence local606)
        e(.Occurrence local607)
        e(.ErrorCluster local608)
        e(dv(.UInt32 2)local609)
        e(.Occurrence local610)
        e(.ErrorCluster local611)
        e(dv(.UInt32 37)local612)
        e(.Occurrence local613)
        e(dv(.String 'BackgroundColor')local614)
        e(.ErrorCluster local615)
        e(.Boolean local616)
        e(.Boolean local617)
        e(.ErrorCluster local618)
        e(.Occurrence local619)
        e(.Occurrence local620)
        e(dv(.String 'FalseColor')local621)
        e(.ErrorCluster local622)
        e(dv(.String 'TrueColor')local623)
        e(.ErrorCluster local624)
        e(.Boolean local625)
        e(.Boolean local626)
        e(.ErrorCluster local627)
        e(.Occurrence local628)
        e(dv(.Boolean false)local629)
        e(dv(.Boolean true)local630)
        e(.Occurrence local631)
        e(.ErrorCluster local632)
        e(dv(.UInt32 4)local633)
        e(.ErrorCluster local634)
        e(.Occurrence local635)
        e(dv(.String 'reinitializeToDefault')local636)
        e(.Boolean local637)
        e(.Boolean local638)
        e(.ErrorCluster local639)
        e(.Occurrence local640)
        e(.Boolean local641)
        ce(dv(.Int32 0)c642)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local652)
        e(.Occurrence local653)
        e(.ErrorCluster local654)
        e(dv(.UInt32 4)local655)
        e(.ErrorCluster local656)
        e(.Occurrence local657)
        e(dv(.String 'reinitializeToDefault')local658)
        e(.Boolean local659)
        e(.Boolean local660)
        e(.ErrorCluster local661)
        e(.Occurrence local662)
        ce(dv(.Int32 0)c663)
        ce(dv(.Int32 0)c664)
        e(.JavaScriptStaticRefNum local665)
        e(.Occurrence local666)
        e(.ErrorCluster local667)
        e(dv(.UInt32 4)local668)
        ce(dv(.Int32 0)c669)
        ce(dv(.Int32 0)c670)
        ce(dv(.UInt32 2)c671)
        e(.Boolean local672)
        ce(dv(.Int32 0)c673)
        e(.Int32 local674)
        e(.Int32 local675)
        e(.Boolean local676)
        e(.Boolean local677)
        e(dv(.Int32 0)local678)
        ce(dv(.Int32 2147483647)c679)
    )
        clump(1
        JavaScriptInvoke(local572 true local573 'ControlReference_GetControlObject' local78 local5 local574)
        JavaScriptInvoke(local595 true local596 'ControlReference_GetControlObject' local203 local5 local597)
        JavaScriptInvoke(local607 true local608 'ControlReference_GetControlObject' local217 local5 local609)
        JavaScriptInvoke(local610 true local611 'ControlReference_GetControlObject' local218 local5 local612)
        JavaScriptInvoke(local631 true local632 'ControlReference_GetControlObject' local266 local5 local633)
        JavaScriptInvoke(local653 true local654 'ControlReference_GetControlObject' local287 local5 local655)
        JavaScriptInvoke(local666 true local667 'ControlReference_GetControlObject' local665 local5 local668)
        ConfigureEventSpecJSRef(c669 c670 local665)
        RegisterForJSEvent(local665 c671)
    Perch(3)
        Copy(local556 local20)
        JavaScriptInvoke(local557 true local20 'OneButtonDialog' local21 local558 local559)
        Copy(local20 local22)
        Copy(local22.status local23)
        Xor(c24 local23 local560)
        BranchIfFalse(1 local560)
        Xor(c25 local23 local561)
        BranchIfFalse(2 local561)
        Branch(3)
    Perch(1)
        Branch(0)
    Perch(2)
        Copy(local22 local26)
        Copy(local26.status local27)
        Copy(local26.code local28)
        Copy(local26.source local29)
        Copy(local562 local30)
        JavaScriptInvoke(local563 true * 'LogLabVIEWError' * local27 local28 local29)
        Branch(0)
    Perch(0)
        Copy(c16 local33)
        Copy(c15 local53)
        Copy(c564 local31)
    Perch(4)
        Copy(local53 local43)
        Copy(local33 local32)
        CopyAndReset(dataItem_OK local55 c565)
        Trigger(1)
        Trigger(2)
        Wait(1)
        Wait(2)
        Copy(local538 local33)
        Copy(local537 local53)
        BranchIfTrue(5 c57)
        BranchIfEQ(4 local31 c679)
        Increment(local31 local31 )
        Branch(4)
    Perch(5)
/* Clump Ended. */    )
    clump(1
        WaitMilliseconds(c56 * )
        // Code End
/* Clump Ended. */    )
    clump(1
        BranchIfEQ(1 local32 c566)
        BranchIfEQ(2 local32 c567)
        BranchIfEQ(3 local32 c568)
        BranchIfEQ(4 local32 c569)
        BranchIfEQ(5 local32 c570)
        BranchIfEQ(6 local32 c571)
        Branch(2)
    Perch(1)
        Copy(local43 local74)
        Copy(c64 local74.Message)
        BranchIfFalse(7 local55)
        Copy(c76 local77)
        Branch(8)
    Perch(7)
        Copy(c75 local77)
    Perch(8)
        Copy(local74 local537)
        Copy(local77 local538)
        Branch(0)
    Perch(2)
        Copy(c80 dataItem_Stage)
        Copy(dataItem_InternalLSR0 local90)
        Trigger(3)
        Trigger(4)
        Wait(3)
        Wait(4)
        Copy(local133 local537)
        Copy(c88 local538)
        Branch(0)
    Perch(3)
        Copy(local43 local150)
        Copy(local150.RandNum local151)
        ArrayLength(local151 local152 )
        IsGE(c154 local152 local590)
        BranchIfTrue(10 local590)
        Branch(11)
    Perch(11)
        Copy(c591 local155)
        Copy(local152 local156)
        Copy(c592 local170)
    Perch(12)
        ArrayIndex(local151 local157 local155 )
        ArrayConcatenate(local168 c167 c166 c165 c164 c163 c162 c161 c160 c159 c158 )
        ArrayIndex(local168 local169 local157 )
        ArrayConcatenate(local170 local170 local169 )
        Increment(local155 local155 )
        BranchIfGE(13 local155 local156)
        Branch(12)
    Perch(13)
        Copy(local170 local172)
        Branch(9)
    Perch(10)
        Copy(c171 local172)
        Branch(9)
    Perch(9)
        Copy(local43 local182)
        Copy(local172 local182.Sequence)
        Copy(local182 local537)
        Copy(c153 local538)
        Branch(0)
    Perch(4)
        Copy(local43 local193)
        Copy(local193.ForLoop-N local194)
        Copy(local193.Sequence local195)
        ArrayLength(local195 local196 )
        MaxAndMinElts(local196 local194 local198 local197 )
        IsGE(c199 local197 local593)
        BranchIfTrue(15 local593)
        Branch(16)
    Perch(16)
        Copy(c594 local200)
        Copy(local197 local201)
    Perch(17)
        ArrayIndex(local195 local202 local200 )
        Trigger(8)
        Trigger(9)
        Wait(8)
        Wait(9)
        Increment(local200 local200 )
        BranchIfGE(18 local200 local201)
        Branch(17)
    Perch(18)
        Branch(14)
    Perch(15)
        Branch(14)
    Perch(14)
        Copy(local217 local219)
        Copy(local615 local220)
        JavaScriptInvoke(local613 true local220 'PropertyNode_PropertyRead' local221 local217 local614)
        Copy(local220 local222)
        Copy(local222.status local223)
        Trigger(10)
        Trigger(11)
        Wait(10)
        Wait(11)
        Copy(local43 local537)
        Copy(c183 local538)
        Branch(0)
    Perch(5)
        Copy(local43 local251)
        Copy(local251.ForLoop-N local252)
        Copy(local251.RandNum local253)
        ArrayLength(local253 local254 )
        MaxAndMinElts(local254 local252 local256 local255 )
        Random(local261 )
        Mul(local261 c260 local262)
        InRangeAndCoerce(local262 c258 c259 local630 local629 local264 local263)
        Convert(local264 local265)
        Trigger(12)
        Trigger(13)
        Wait(12)
        Wait(13)
        Copy(local467 local537)
        Copy(c257 local538)
        Branch(0)
    Perch(6)
        Copy(local43 local477)
        Copy(local477.ForLoop-N local478)
        Copy(local477.Pass%2FFail local479)
        Copy(local477.RandNum local480)
        Copy(local477.LastColorIndex local481)
        Copy(local477.SpecialWordIndex local482)
        ArrayIndex(local480 local483 local481 )
        Xor(c484 local479 local676)
        BranchIfFalse(20 local676)
        Xor(c485 local479 local677)
        BranchIfFalse(21 local677)
        Branch(20)
    Perch(20)
        NumberToDecimalString(local483 local678 local486 )
        StringConcatenate(local492 c490 c487 local486 c488 c491 )
        Copy(c493 local508)
        Copy(local492 local509)
        Copy(c489 local510)
        Branch(19)
    Perch(21)
        ArrayConcatenate(local505 c504 c502 c501 c500 c499 c498 )
        ArrayIndex(local505 local506 local482 )
        StringConcatenate(local507 c494 local506 c495 c497 )
        Copy(c496 local508)
        Copy(local507 local509)
        Copy(c503 local510)
        Branch(19)
    Perch(19)
        And(local510 local55 local511)
        Increment(local478 local512 )
        BranchIfFalse(22 local511)
        Copy(local512 local513)
        Branch(23)
    Perch(22)
        Copy(local478 local513)
    Perch(23)
        Copy(local43 local523)
        Copy(local513 local523.ForLoop-N)
        Copy(local509 local523.Message)
        Copy(c524 dataItem_ColorCounts)
        BranchIfFalse(24 local55)
        Copy(local508 local527)
        Branch(25)
    Perch(24)
        Copy(c526 local527)
    Perch(25)
        Copy(local523 local537)
        Copy(local527 local538)
        Branch(0)
    Perch(0)
        Copy(local537 local548)
        Copy(local548.ForLoop-N local549)
        Copy(local548.Message local550)
        Copy(local550 dataItem_MessageToPlayer)
        Decrement(local549 local553 )
        Copy(local553 dataItem_Stage)
        // Code End
/* Clump Ended. */    )
    clump(1
        IsGE(c106 c83 local583)
        BranchIfTrue(1 local583)
        Branch(2)
    Perch(2)
        Copy(local90 local110)
        Copy(c584 local107)
        Copy(c83 local108)
        Copy(c585 local119)
    Perch(3)
        Copy(local110 local109)
        Random(local113 )
        Mul(local113 c112 local114)
        Quotient(local114 c111 local115)
        Convert(local115 local117)
        IsNE(local117 local109 local118)
        BranchIfFalse(4 local118)
        ArrayConcatenate(local119 local119 local117 )
    Perch(4)
        Copy(local117 local110)
        Increment(local107 local107 )
        BranchIfGE(5 local107 local108)
        Branch(3)
    Perch(5)
        Copy(local119 local121)
        Copy(local117 local122)
        Branch(0)
    Perch(1)
        Copy(c120 local121)
        Copy(local90 local122)
        Branch(0)
    Perch(0)
        Copy(local122 dataItem_InternalLSR0)
        Trigger(5)
        Wait(5)
        // Code End
/* Clump Ended. */    )
    clump(1
        Copy(local78 local91)
        Copy(local577 local92)
        JavaScriptInvoke(local575 true local92 'PropertyNode_PropertyRead' local93 local78 local576)
        Copy(local92 local94)
        Copy(local94.status local95)
        Trigger(5)
        Trigger(6)
        Trigger(7)
        Wait(5)
        Wait(6)
        Wait(7)
        // Code End
/* Clump Ended. */    )
    clump(2
        Copy(local43 local133)
        Copy(c84 local133.Sequence)
        Copy(c79 local133.UserInput)
        Copy(local93 local133.PaneColor)
        Copy(local121 local133.RandNum)
        Copy(c85 local133.ForLoop-N)
        Copy(c86 local133.LastColorIndex)
        Copy(c87 local133.Message)
        // Code End
/* Clump Ended. */    )
    clump(1
    Perch(3)
        Xor(c134 local95 local586)
        BranchIfFalse(1 local586)
        Xor(c135 local95 local587)
        BranchIfFalse(2 local587)
        Branch(3)
    Perch(1)
        Branch(0)
    Perch(2)
        Copy(local94 local136)
        Copy(local136.status local137)
        Copy(local136.code local138)
        Copy(local136.source local139)
        Copy(local588 local140)
        JavaScriptInvoke(local589 true * 'LogLabVIEWError' * local137 local138 local139)
        Branch(0)
    Perch(0)
        // Code End
/* Clump Ended. */    )
    clump(1
    Perch(3)
        Copy(local578 local96)
        CloseReference(local91 local96)
        Copy(local96 local97)
        Copy(local97.status local98)
        Xor(c99 local98 local579)
        BranchIfFalse(1 local579)
        Xor(c100 local98 local580)
        BranchIfFalse(2 local580)
        Branch(3)
    Perch(1)
        Branch(0)
    Perch(2)
        Copy(local97 local101)
        Copy(local101.status local102)
        Copy(local101.code local103)
        Copy(local101.source local104)
        Copy(local581 local105)
        JavaScriptInvoke(local582 true * 'LogLabVIEWError' * local102 local103 local104)
        Branch(0)
    Perch(0)
        // Code End
/* Clump Ended. */    )
    clump(1
        WaitMilliseconds(c204 * )
        // Code End
/* Clump Ended. */    )
    clump(1
    Perch(3)
        Copy(local203 local205)
        Copy(local600 local206)
        JavaScriptInvoke(local598 true local206 'PropertyNode_PropertyWrite' * local203 local599 local202)
        Copy(local602 local206)
        JavaScriptInvoke(local598 true local206 'PropertyNode_PropertyWrite' * local203 local601 local202)
        Copy(local206 local207)
        Copy(local207.status local208)
        Xor(c209 local208 local603)
        BranchIfFalse(1 local603)
        Xor(c210 local208 local604)
        BranchIfFalse(2 local604)
        Branch(3)
    Perch(1)
        Branch(0)
    Perch(2)
        Copy(local207 local211)
        Copy(local211.status local212)
        Copy(local211.code local213)
        Copy(local211.source local214)
        Copy(local605 local215)
        JavaScriptInvoke(local606 true * 'LogLabVIEWError' * local212 local213 local214)
        Branch(0)
    Perch(0)
        // Code End
/* Clump Ended. */    )
    clump(1
    Perch(3)
        Copy(local218 local231)
        Copy(local622 local232)
        JavaScriptInvoke(local620 true local232 'PropertyNode_PropertyWrite' * local218 local621 local221)
        Copy(local624 local232)
        JavaScriptInvoke(local620 true local232 'PropertyNode_PropertyWrite' * local218 local623 local221)
        Copy(local232 local233)
        Copy(local233.status local234)
        Xor(c235 local234 local625)
        BranchIfFalse(1 local625)
        Xor(c236 local234 local626)
        BranchIfFalse(2 local626)
        Branch(3)
    Perch(1)
        Branch(0)
    Perch(2)
        Copy(local233 local237)
        Copy(local237.status local238)
        Copy(local237.code local239)
        Copy(local237.source local240)
        Copy(local627 local241)
        JavaScriptInvoke(local628 true * 'LogLabVIEWError' * local238 local239 local240)
        Branch(0)
    Perch(0)
        // Code End
/* Clump Ended. */    )
    clump(1
    Perch(3)
        Xor(c224 local223 local616)
        BranchIfFalse(1 local616)
        Xor(c225 local223 local617)
        BranchIfFalse(2 local617)
        Branch(3)
    Perch(1)
        Branch(0)
    Perch(2)
        Copy(local222 local226)
        Copy(local226.status local227)
        Copy(local226.code local228)
        Copy(local226.source local229)
        Copy(local618 local230)
        JavaScriptInvoke(local619 true * 'LogLabVIEWError' * local227 local228 local229)
        Branch(0)
    Perch(0)
        // Code End
/* Clump Ended. */    )
    clump(1
        IsGE(c279 local255 local641)
        BranchIfTrue(1 local641)
        Branch(2)
    Perch(2)
        Copy(local252 local284)
        Copy(c642 local280)
        Copy(local255 local281)
        Copy(local43 local652)
    Perch(3)
        ArrayIndex(local253 local282 local280 )
        Copy(local284 local283)
        Copy(local283 dataItem_ColorCounts)
        Trigger(14)
        Trigger(15)
        Wait(14)
        Wait(15)
        Copy(local352 local284)
        Copy(local280 local675)
        Increment(local280 local280 )
        BranchIfGE(4 local280 local281)
        BranchIfFalse(4 local433)
        Branch(3)
    Perch(4)
        Copy(local675 local446)
        Copy(local43 local456)
        Copy(local433 local457)
        Branch(0)
    Perch(1)
        Copy(c445 local446)
        Copy(c444 local456)
        Copy(c434 local457)
        Branch(0)
    Perch(0)
        Copy(local456 local467)
        Copy(local457 local467.Pass%2FFail)
        Copy(local446 local467.LastColorIndex)
        Copy(local265 local467.SpecialWordIndex)
        // Code End
/* Clump Ended. */    )
    clump(1
    Perch(3)
        Copy(local266 local269)
        Copy(local634 local268)
        JavaScriptInvoke(local635 true local268 'InvokeControlFunction' * local266 local636)
        Copy(local268 local270)
        Copy(local270.status local271)
        Xor(c272 local271 local637)
        BranchIfFalse(1 local637)
        Xor(c273 local271 local638)
        BranchIfFalse(2 local638)
        Branch(3)
    Perch(1)
        Branch(0)
    Perch(2)
        Copy(local270 local274)
        Copy(local274.status local275)
        Copy(local274.code local276)
        Copy(local274.source local277)
        Copy(local639 local278)
        JavaScriptInvoke(local640 true * 'LogLabVIEWError' * local275 local276 local277)
        Branch(0)
    Perch(0)
        // Code End
/* Clump Ended. */    )
    clump(1
        WaitForEventsAndDispatch(* * c663 c664 local351 1)
        Branch(0)
    Perch(1)
        Decrement(local283 local352 )
        Copy(local351 local380)
        Copy(local380.Old%20Value local391)
        Copy(local380.New%20Value local402)
        Copy(dataItem_SelectColors local424)
        Branch(0)
    Perch(0)
        ClusterToArray(local425 local424 )
        ArrayLength(local425 local426 )
        IsGE(c427 local426 local672)
        BranchIfTrue(3 local672)
        Branch(4)
    Perch(4)
        Copy(c673 local428)
        Copy(local426 local429)
    Perch(5)
        ArrayIndex(local425 local430 local428 )
        Copy(local428 local674)
        Increment(local428 local428 )
        BranchIfGE(6 local428 local429)
        BranchIfTrue(6 local430)
        Branch(5)
    Perch(6)
        Copy(local674 local432)
        Branch(2)
    Perch(3)
        Copy(c431 local432)
        Branch(2)
    Perch(2)
        IsEQ(local282 local432 local433)
        // Code End
/* Clump Ended. */    )
    clump(1
    Perch(3)
        Copy(local287 local290)
        Copy(local656 local289)
        JavaScriptInvoke(local657 true local289 'InvokeControlFunction' * local287 local658)
        Copy(local289 local291)
        Copy(local291.status local292)
        Xor(c293 local292 local659)
        BranchIfFalse(1 local659)
        Xor(c294 local292 local660)
        BranchIfFalse(2 local660)
        Branch(3)
    Perch(1)
        Branch(0)
    Perch(2)
        Copy(local291 local295)
        Copy(local295.status local296)
        Copy(local295.code local297)
        Copy(local295.source local298)
        Copy(local661 local299)
        JavaScriptInvoke(local662 true * 'LogLabVIEWError' * local296 local297 local298)
        Branch(0)
    Perch(0)
        // Code End
/* Clump Ended. */    )
)))
enqueue (WebApp%3A%3Aindex%2Egviweb)
//Finished!! :D
