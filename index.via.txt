// Autogenerated Vireo assembly file
// Generated on 06/27/2020 17:31:35
//---------------------------------------------------
//VI Definition: ::Web Server::Interactive::WebApp::index.gviweb
define (WebApp%3A%3Aindex%2Egviweb dv(.VirtualInstrument (
    Events: c(
        e(c( // Event Struct 0
            e(dv(c(
                e(.UInt32 eventSource)
                e(.UInt32 eventType)
                e(.UInt32 controlUID)
                e(.UInt32 dynamicIndex)
            ) (1000 2 4 0 ))local4)
        ))
    )
    Locals: c(   // Data Space
        e(dv(.String 'WebApp::index.gviweb')local5)
        ce(dv(c(
            ce(a(.Int32 *) UserInput)
            ce(.UInt32 PaneColor)
            ce(a(.UInt32 *) Sequence)
            ce(a(.Int32 *) RandNum)
            ce(.Int32 ForLoop-N)
            ce(.Int32 LastColorIndex)
            ce(.Boolean Pass%2FFail)
            ce(.String Message)
            ce(.Int32 SpecialWordIndex)
        ) (() 4278190080 () () 0 0 false '' 0 ))c15)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 1)c16)
        ce(dv(.String 'Hello, Welcome!\x0A\x0AHere is the instructions to play this Memory Game.\x0A\x0A1. The color sequence will be shown in the "Color Display"\x0A2. You need to observe the colors and its displaying order.\x0A3. And then you need to Choose the Colors in "Select Color" Panel in the same order.\x0A4. If you succeed, one more color will be added to the sequence & you will be moved to next stage & .\x0A5. Else, the game will begin from stage 1.\x0A\x0APress OK to Start. Lets check your memory :)')c17)
        ce(dv(.String 'OK')c18)
        ce(dv(.ErrorCluster (true 0 '' ))c19)
        e(.ErrorCluster local20)
        e(.Boolean local21)
        e(.ErrorCluster local22)
        e(.Boolean local23)
        ce(dv(.Boolean false)c24)
        ce(dv(.Boolean true)c25)
        e(.ErrorCluster local26)
        e(.Boolean local27)
        e(.Int32 local28)
        e(.String local29)
        e(.ErrorCluster local30)
        e(.Int32 local31)
        e(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") local32)
        e(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") local33)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local43)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local53)
        de(dv(.Boolean false)dataItem_OK)
        e(.Boolean local55)
        ce(dv(.UInt32 100)c56)
        ce(dv(.Boolean false)c57)
        ce(dv(.Int64 0)c58)
        ce(dv(.Int64 1)c59)
        ce(dv(.Int64 2)c60)
        ce(dv(.Int64 3)c61)
        ce(dv(.Int64 4)c62)
        ce(dv(.Int64 5)c63)
        ce(dv(.String 'Hello, Welcome!\x0A\x0AHere is the instructions to play this Memory Game.\x0A1. The color sequence will be displayed in the color display at the top!\x0A2. You need to observe the colors and its displaying order.\x0A3. And then you need to select the colors in the same order in the bottom panel!\x0A\x0APress OK to Start. Lets check your memory :)')c64)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local74)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 0)c75)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 1)c76)
        e(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") local77)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 2)c78)
        ce(dv(.String '\x0A\x0AObserve the Color Sequence Playing in the \'Color Display\'.')c79)
        ce(dv(.Int32 0)c80)
        ce(dv(.Int32 1)c81)
        ce(a(.UInt32 *) c82)
        ce(dv(.Int32 100)c83)
        ce(dv(.Int32 0)c84)
        de(dv(.Int32 0)dataItem_ColorsMemorized)
        e(.Int32 local86)
        ce(a(.Int32 *) c87)
        e(.JavaScriptStaticRefNum local88)
        ce(dv(.Int32 0)c89)
        e(.Int32 local90)
        e(.Int32 local91)
        ce(dv(.Double 1)c92)
        ce(dv(.Double 10)c93)
        e(.Double local94)
        e(.Double local95)
        e(.Double local96)
        e(.Double local97)
        e(.Int32 local98)
        e(a(.Int32 *) local99)
        ce(a(.Int32 *) c100)
        e(a(.Int32 *) local101)
        e(.JavaScriptStaticRefNum local102)
        e(.ErrorCluster local103)
        e(.UInt32 local104)
        e(.ErrorCluster local105)
        e(.Boolean local106)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local116)
        ce(dv(.Boolean false)c117)
        ce(dv(.Boolean true)c118)
        e(.ErrorCluster local119)
        e(.Boolean local120)
        e(.Int32 local121)
        e(.String local122)
        e(.ErrorCluster local123)
        e(.ErrorCluster local124)
        e(.ErrorCluster local125)
        e(.Boolean local126)
        ce(dv(.Boolean false)c127)
        ce(dv(.Boolean true)c128)
        e(.ErrorCluster local129)
        e(.Boolean local130)
        e(.Int32 local131)
        e(.String local132)
        e(.ErrorCluster local133)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local143)
        e(a(.Int32 *) local144)
        e(.Int32 local145)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 3)c146)
        ce(dv(.Int32 0)c147)
        e(.Int32 local148)
        e(.Int32 local149)
        e(.Int32 local150)
        ce(dv(.UInt32 4293794853)c151)
        ce(dv(.UInt32 4282614967)c152)
        ce(dv(.UInt32 4278190080)c153)
        ce(dv(.UInt32 4279833443)c154)
        ce(dv(.UInt32 4282038392)c155)
        ce(dv(.UInt32 4294684508)c156)
        ce(dv(.UInt32 4283257689)c157)
        ce(dv(.UInt32 4278219059)c158)
        ce(dv(.UInt32 4294963712)c159)
        ce(dv(.UInt32 4289700362)c160)
        e(a(.UInt32 *) local161)
        e(.UInt32 local162)
        e(a(.UInt32 *) local163)
        ce(a(.UInt32 *) c164)
        e(a(.UInt32 *) local165)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local175)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 4)c176)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local186)
        e(.Int32 local187)
        e(a(.UInt32 *) local188)
        e(.Int32 local189)
        e(.Int32 local190)
        e(.Int32 local191)
        ce(dv(.Int32 0)c192)
        e(.Int32 local193)
        e(.Int32 local194)
        e(.UInt32 local195)
        e(.JavaScriptStaticRefNum local196)
        ce(dv(.UInt32 500)c197)
        e(.JavaScriptStaticRefNum local198)
        e(.ErrorCluster local199)
        e(.ErrorCluster local200)
        e(.Boolean local201)
        ce(dv(.Boolean false)c202)
        ce(dv(.Boolean true)c203)
        e(.ErrorCluster local204)
        e(.Boolean local205)
        e(.Int32 local206)
        e(.String local207)
        e(.ErrorCluster local208)
        e(.UInt32 local209)
        e(.JavaScriptStaticRefNum local210)
        e(.JavaScriptStaticRefNum local211)
        e(.JavaScriptStaticRefNum local212)
        e(.ErrorCluster local213)
        e(.UInt32 local214)
        e(.ErrorCluster local215)
        e(.Boolean local216)
        ce(dv(.Boolean false)c217)
        ce(dv(.Boolean true)c218)
        e(.ErrorCluster local219)
        e(.Boolean local220)
        e(.Int32 local221)
        e(.String local222)
        e(.ErrorCluster local223)
        e(.JavaScriptStaticRefNum local224)
        e(.ErrorCluster local225)
        e(.ErrorCluster local226)
        e(.Boolean local227)
        ce(dv(.Boolean false)c228)
        ce(dv(.Boolean true)c229)
        e(.ErrorCluster local230)
        e(.Boolean local231)
        e(.Int32 local232)
        e(.String local233)
        e(.ErrorCluster local234)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local244)
        e(.Int32 local245)
        e(a(.Int32 *) local246)
        e(.Int32 local247)
        e(.Int32 local248)
        e(.Int32 local249)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 5)c250)
        ce(dv(.Double 0)c251)
        ce(dv(.Double 5)c252)
        ce(dv(.Double 5)c253)
        e(.Double local254)
        e(.Double local255)
        e(.Boolean local256)
        e(.Double local257)
        e(.Int32 local258)
        e(.JavaScriptStaticRefNum local259)
        ce(dv(.String 'reinitializeToDefault')c260)
        e(.ErrorCluster local261)
        e(.JavaScriptStaticRefNum local262)
        e(.ErrorCluster local263)
        e(.Boolean local264)
        ce(dv(.Boolean false)c265)
        ce(dv(.Boolean true)c266)
        e(.ErrorCluster local267)
        e(.Boolean local268)
        e(.Int32 local269)
        e(.String local270)
        e(.ErrorCluster local271)
        ce(dv(.Int32 0)c272)
        e(.Int32 local273)
        e(.Int32 local274)
        e(.Int32 local275)
        e(c(
            e(c(
                e(.Boolean %30)
                e(.Boolean %31)
                e(.Boolean %32)
                e(.Boolean %33)
                e(.Boolean %34)
                e(.Boolean %35)
                e(.Boolean %36)
                e(.Boolean %37)
                e(.Boolean %38)
                e(.Boolean %39)
            ) Old%20Value)
            e(c(
                e(.Boolean %30)
                e(.Boolean %31)
                e(.Boolean %32)
                e(.Boolean %33)
                e(.Boolean %34)
                e(.Boolean %35)
                e(.Boolean %36)
                e(.Boolean %37)
                e(.Boolean %38)
                e(.Boolean %39)
            ) New%20Value)
        ) %7BF3226E31-E688-4C58-AE1E-7ED6718409A1%7D_4) // Value changed
        e(.Int32 local299)
        e(c(
            e(.UInt32 Source)
            e(.UInt32 Type)
            e(.UInt32 Time)
            e(.UInt32 Index)
            e(.JavaScriptStaticRefNum Control%20Reference)
            e(c(
                e(.Boolean %30)
                e(.Boolean %31)
                e(.Boolean %32)
                e(.Boolean %33)
                e(.Boolean %34)
                e(.Boolean %35)
                e(.Boolean %36)
                e(.Boolean %37)
                e(.Boolean %38)
                e(.Boolean %39)
            ) Old%20Value)
            e(c(
                e(.Boolean %30)
                e(.Boolean %31)
                e(.Boolean %32)
                e(.Boolean %33)
                e(.Boolean %34)
                e(.Boolean %35)
                e(.Boolean %36)
                e(.Boolean %37)
                e(.Boolean %38)
                e(.Boolean %39)
            ) New%20Value)
        ) local327)
        e(c(
            e(.UInt32 Source)
            e(.UInt32 Type)
            e(.UInt32 Time)
            e(.UInt32 Index)
            e(.JavaScriptStaticRefNum Control%20Reference)
            e(c(
                e(.Boolean %30)
                e(.Boolean %31)
                e(.Boolean %32)
                e(.Boolean %33)
                e(.Boolean %34)
                e(.Boolean %35)
                e(.Boolean %36)
                e(.Boolean %37)
                e(.Boolean %38)
                e(.Boolean %39)
            ) Old%20Value)
            e(c(
                e(.Boolean %30)
                e(.Boolean %31)
                e(.Boolean %32)
                e(.Boolean %33)
                e(.Boolean %34)
                e(.Boolean %35)
                e(.Boolean %36)
                e(.Boolean %37)
                e(.Boolean %38)
                e(.Boolean %39)
            ) New%20Value)
        ) local355)
        e(c(
            e(.Boolean %30)
            e(.Boolean %31)
            e(.Boolean %32)
            e(.Boolean %33)
            e(.Boolean %34)
            e(.Boolean %35)
            e(.Boolean %36)
            e(.Boolean %37)
            e(.Boolean %38)
            e(.Boolean %39)
        ) local366)
        e(c(
            e(.Boolean %30)
            e(.Boolean %31)
            e(.Boolean %32)
            e(.Boolean %33)
            e(.Boolean %34)
            e(.Boolean %35)
            e(.Boolean %36)
            e(.Boolean %37)
            e(.Boolean %38)
            e(.Boolean %39)
        ) local377)
        de(dv(c(
            e(.Boolean %30)
            e(.Boolean %31)
            e(.Boolean %32)
            e(.Boolean %33)
            e(.Boolean %34)
            e(.Boolean %35)
            e(.Boolean %36)
            e(.Boolean %37)
            e(.Boolean %38)
            e(.Boolean %39)
        ) (false false false false false false false false false false ))dataItem_SelectColors)
        e(c(
            e(.Boolean %30)
            e(.Boolean %31)
            e(.Boolean %32)
            e(.Boolean %33)
            e(.Boolean %34)
            e(.Boolean %35)
            e(.Boolean %36)
            e(.Boolean %37)
            e(.Boolean %38)
            e(.Boolean %39)
        ) local399)
        e(a(.Boolean *) local400)
        e(.Int32 local401)
        ce(dv(.Int32 0)c402)
        e(.Int32 local403)
        e(.Int32 local404)
        e(.Boolean local405)
        ce(dv(.Int32 0)c406)
        e(.Int32 local407)
        e(.Boolean local408)
        e(.JavaScriptStaticRefNum local409)
        ce(dv(.String 'reinitializeToDefault')c410)
        e(.ErrorCluster local411)
        e(.JavaScriptStaticRefNum local412)
        e(.ErrorCluster local413)
        e(.Boolean local414)
        ce(dv(.Boolean false)c415)
        ce(dv(.Boolean true)c416)
        e(.ErrorCluster local417)
        e(.Boolean local418)
        e(.Int32 local419)
        e(.String local420)
        e(.ErrorCluster local421)
        ce(dv(.Boolean false)c422)
        ce(dv(c(
            ce(a(.Int32 *) UserInput)
            ce(.UInt32 PaneColor)
            ce(a(.UInt32 *) Sequence)
            ce(a(.Int32 *) RandNum)
            ce(.Int32 ForLoop-N)
            ce(.Int32 LastColorIndex)
            ce(.Boolean Pass%2FFail)
            ce(.String Message)
            ce(.Int32 SpecialWordIndex)
        ) (() 0 () () 0 0 false '' 0 ))c432)
        ce(dv(.Int32 0)c433)
        e(.Int32 local434)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local444)
        e(.Boolean local445)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local455)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local465)
        e(.Int32 local466)
        e(.Boolean local467)
        e(a(.Int32 *) local468)
        e(.Int32 local469)
        e(.Int32 local470)
        e(.Int32 local471)
        ce(dv(.Boolean false)c472)
        ce(dv(.Boolean true)c473)
        e(.String local474)
        ce(dv(.String 'Oops! That was wrong.\x0AThe Correct Color is ')c475)
        ce(dv(.String '.\x0A')c476)
        ce(dv(.Boolean false)c477)
        ce(dv(.String '\x0D\x0A')c478)
        ce(dv(.String '\x0AHit on OK to Restart the Game!')c479)
        e(.String local480)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 1)c481)
        ce(dv(.String '\x0D\x0A')c482)
        ce(dv(.String '\x0D\x0A')c483)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 3)c484)
        ce(dv(.String 'Lets add one more color in the sequence!\x0A\x0AHit on OK to Continue')c485)
        ce(dv(.String 'Amazing!')c486)
        ce(dv(.String 'You have a strong Memory!')c487)
        ce(dv(.String 'Fantastic!')c488)
        ce(dv(.String 'You are Champ!')c489)
        ce(dv(.String 'Awesome !')c490)
        ce(dv(.Boolean true)c491)
        ce(dv(.String 'Great !')c492)
        e(a(.String *) local493)
        e(.String local494)
        e(.String local495)
        e(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") local496)
        e(.String local497)
        e(.Boolean local498)
        e(.Boolean local499)
        e(.Int32 local500)
        e(.Int32 local501)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local511)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 5)c512)
        e(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") local513)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local523)
        e(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") local524)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local534)
        e(.Int32 local535)
        e(.String local536)
        de(dv(.String '')dataItem_MessageToPlayer)
        e(.String local538)
        e(.Int32 local539)
        e(.Int32 local540)
        e(.UInt32 local541)
        e(.ErrorCluster local542)
        e(.Occurrence local543)
        e(dv(.String 'Hello, Welcome!\x0A\x0AHere is the instructions to play this Memory Game.\x0A\x0A1. The color sequence will be shown in the "Color Display"\x0A2. You need to observe the colors and its displaying order.\x0A3. And then you need to Choose the Colors in "Select Color" Panel in the same order.\x0A4. If you succeed, one more color will be added to the sequence & you will be moved to next stage & .\x0A5. Else, the game will begin from stage 1.\x0A\x0APress OK to Start. Lets check your memory :)')local544)
        e(dv(.String 'OK')local545)
        e(.Boolean local546)
        e(.Boolean local547)
        e(.ErrorCluster local548)
        e(.Occurrence local549)
        ce(dv(.Int32 0)c550)
        ce(dv(.Boolean false)c551)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 0)c552)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 1)c553)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 2)c554)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 3)c555)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 4)c556)
        ce(dv(Enum16("Instructions" "Initialize" "AddColor2Seq" "PlaySequence" "GetInput&Qualify" "DisplayMsg") 5)c557)
        e(.Occurrence local558)
        e(.ErrorCluster local559)
        e(dv(.UInt32 2)local560)
        e(.Boolean local561)
        ce(dv(.Int32 0)c562)
        ce(a(.Int32 *) c563)
        e(.Occurrence local564)
        e(dv(.String 'BackgroundColor')local565)
        e(.ErrorCluster local566)
        e(.Boolean local567)
        e(.Boolean local568)
        e(.ErrorCluster local569)
        e(.Occurrence local570)
        e(.ErrorCluster local571)
        e(.Boolean local572)
        e(.Boolean local573)
        e(.ErrorCluster local574)
        e(.Occurrence local575)
        e(.Boolean local576)
        ce(dv(.Int32 0)c577)
        ce(a(.UInt32 *) c578)
        e(.Boolean local579)
        ce(dv(.Int32 0)c580)
        e(.Occurrence local581)
        e(.ErrorCluster local582)
        e(dv(.UInt32 37)local583)
        e(.Occurrence local584)
        e(dv(.String 'FalseColor')local585)
        e(.ErrorCluster local586)
        e(dv(.String 'TrueColor')local587)
        e(.ErrorCluster local588)
        e(.Boolean local589)
        e(.Boolean local590)
        e(.ErrorCluster local591)
        e(.Occurrence local592)
        e(.Occurrence local593)
        e(.ErrorCluster local594)
        e(dv(.UInt32 2)local595)
        e(.Occurrence local596)
        e(.ErrorCluster local597)
        e(dv(.UInt32 37)local598)
        e(.Occurrence local599)
        e(dv(.String 'BackgroundColor')local600)
        e(.ErrorCluster local601)
        e(.Boolean local602)
        e(.Boolean local603)
        e(.ErrorCluster local604)
        e(.Occurrence local605)
        e(.Occurrence local606)
        e(dv(.String 'FalseColor')local607)
        e(.ErrorCluster local608)
        e(dv(.String 'TrueColor')local609)
        e(.ErrorCluster local610)
        e(.Boolean local611)
        e(.Boolean local612)
        e(.ErrorCluster local613)
        e(.Occurrence local614)
        e(dv(.Boolean false)local615)
        e(dv(.Boolean true)local616)
        e(.Occurrence local617)
        e(.ErrorCluster local618)
        e(dv(.UInt32 4)local619)
        e(.ErrorCluster local620)
        e(.Occurrence local621)
        e(dv(.String 'reinitializeToDefault')local622)
        e(.Boolean local623)
        e(.Boolean local624)
        e(.ErrorCluster local625)
        e(.Occurrence local626)
        e(.Boolean local627)
        ce(dv(.Int32 0)c628)
        e(c(
            e(a(.Int32 *) UserInput)
            e(.UInt32 PaneColor)
            e(a(.UInt32 *) Sequence)
            e(a(.Int32 *) RandNum)
            e(.Int32 ForLoop-N)
            e(.Int32 LastColorIndex)
            e(.Boolean Pass%2FFail)
            e(.String Message)
            e(.Int32 SpecialWordIndex)
        ) local638)
        ce(dv(.Int32 0)c639)
        ce(dv(.Int32 0)c640)
        e(.JavaScriptStaticRefNum local641)
        e(.Occurrence local642)
        e(.ErrorCluster local643)
        e(dv(.UInt32 4)local644)
        ce(dv(.Int32 0)c645)
        ce(dv(.Int32 0)c646)
        ce(dv(.UInt32 2)c647)
        e(.Boolean local648)
        ce(dv(.Int32 0)c649)
        e(.Int32 local650)
        e(.Occurrence local651)
        e(.ErrorCluster local652)
        e(dv(.UInt32 4)local653)
        e(.ErrorCluster local654)
        e(.Occurrence local655)
        e(dv(.String 'reinitializeToDefault')local656)
        e(.Boolean local657)
        e(.Boolean local658)
        e(.ErrorCluster local659)
        e(.Occurrence local660)
        e(.Int32 local661)
        e(.Boolean local662)
        e(.Boolean local663)
        e(dv(.Int32 0)local664)
        ce(dv(.Int32 2147483647)c665)
    )
        clump(1
        JavaScriptInvoke(local558 true local559 'ControlReference_GetControlObject' local88 local5 local560)
        JavaScriptInvoke(local581 true local582 'ControlReference_GetControlObject' local196 local5 local583)
        JavaScriptInvoke(local593 true local594 'ControlReference_GetControlObject' local210 local5 local595)
        JavaScriptInvoke(local596 true local597 'ControlReference_GetControlObject' local211 local5 local598)
        JavaScriptInvoke(local617 true local618 'ControlReference_GetControlObject' local259 local5 local619)
        JavaScriptInvoke(local642 true local643 'ControlReference_GetControlObject' local641 local5 local644)
        ConfigureEventSpecJSRef(c645 c646 local641)
        RegisterForJSEvent(local641 c647)
        JavaScriptInvoke(local651 true local652 'ControlReference_GetControlObject' local409 local5 local653)
    Perch(3)
        Copy(local542 local20)
        JavaScriptInvoke(local543 true local20 'OneButtonDialog' local21 local544 local545)
        Copy(local20 local22)
        Copy(local22.status local23)
        Xor(c24 local23 local546)
        BranchIfFalse(1 local546)
        Xor(c25 local23 local547)
        BranchIfFalse(2 local547)
        Branch(3)
    Perch(1)
        Branch(0)
    Perch(2)
        Copy(local22 local26)
        Copy(local26.status local27)
        Copy(local26.code local28)
        Copy(local26.source local29)
        Copy(local548 local30)
        JavaScriptInvoke(local549 true * 'LogLabVIEWError' * local27 local28 local29)
        Branch(0)
    Perch(0)
        Copy(c16 local33)
        Copy(c15 local53)
        Copy(c550 local31)
    Perch(4)
        Copy(local53 local43)
        Copy(local33 local32)
        CopyAndReset(dataItem_OK local55 c551)
        Trigger(1)
        Trigger(2)
        Wait(1)
        Wait(2)
        Copy(local524 local33)
        Copy(local523 local53)
        BranchIfTrue(5 c57)
        BranchIfEQ(4 local31 c665)
        Increment(local31 local31 )
        Branch(4)
    Perch(5)
/* Clump Ended. */    )
    clump(1
        WaitMilliseconds(c56 * )
        // Code End
/* Clump Ended. */    )
    clump(1
        BranchIfEQ(1 local32 c552)
        BranchIfEQ(2 local32 c553)
        BranchIfEQ(3 local32 c554)
        BranchIfEQ(4 local32 c555)
        BranchIfEQ(5 local32 c556)
        BranchIfEQ(6 local32 c557)
        Branch(2)
    Perch(1)
        Copy(local43 local74)
        Copy(c64 local74.Message)
        BranchIfFalse(7 local55)
        Copy(c76 local77)
        Branch(8)
    Perch(7)
        Copy(c75 local77)
    Perch(8)
        Copy(local74 local523)
        Copy(local77 local524)
        Branch(0)
    Perch(2)
        Copy(c84 dataItem_ColorsMemorized)
        Trigger(3)
        Trigger(4)
        Wait(3)
        Wait(4)
        Copy(local116 local523)
        Copy(c78 local524)
        Branch(0)
    Perch(3)
        Copy(local43 local143)
        Copy(local143.RandNum local144)
        ArrayLength(local144 local145 )
        IsGE(c147 local145 local576)
        BranchIfTrue(10 local576)
        Branch(11)
    Perch(11)
        Copy(c577 local148)
        Copy(local145 local149)
        Copy(c578 local163)
    Perch(12)
        ArrayIndex(local144 local150 local148 )
        ArrayConcatenate(local161 c160 c159 c158 c157 c156 c155 c154 c153 c152 c151 )
        ArrayIndex(local161 local162 local150 )
        ArrayConcatenate(local163 local163 local162 )
        Increment(local148 local148 )
        BranchIfGE(13 local148 local149)
        Branch(12)
    Perch(13)
        Copy(local163 local165)
        Branch(9)
    Perch(10)
        Copy(c164 local165)
        Branch(9)
    Perch(9)
        Copy(local43 local175)
        Copy(local165 local175.Sequence)
        Copy(local175 local523)
        Copy(c146 local524)
        Branch(0)
    Perch(4)
        Copy(local43 local186)
        Copy(local186.ForLoop-N local187)
        Copy(local186.Sequence local188)
        ArrayLength(local188 local189 )
        MaxAndMinElts(local189 local187 local191 local190 )
        IsGE(c192 local190 local579)
        BranchIfTrue(15 local579)
        Branch(16)
    Perch(16)
        Copy(c580 local193)
        Copy(local190 local194)
    Perch(17)
        ArrayIndex(local188 local195 local193 )
        Trigger(8)
        Trigger(9)
        Wait(8)
        Wait(9)
        Increment(local193 local193 )
        BranchIfGE(18 local193 local194)
        Branch(17)
    Perch(18)
        Branch(14)
    Perch(15)
        Branch(14)
    Perch(14)
        Copy(local210 local212)
        Copy(local601 local213)
        JavaScriptInvoke(local599 true local213 'PropertyNode_PropertyRead' local214 local210 local600)
        Copy(local213 local215)
        Copy(local215.status local216)
        Trigger(10)
        Trigger(11)
        Wait(10)
        Wait(11)
        Copy(local43 local523)
        Copy(c176 local524)
        Branch(0)
    Perch(5)
        Copy(local43 local244)
        Copy(local244.ForLoop-N local245)
        Copy(local244.RandNum local246)
        ArrayLength(local246 local247 )
        MaxAndMinElts(local247 local245 local249 local248 )
        Random(local254 )
        Mul(local254 c253 local255)
        InRangeAndCoerce(local255 c251 c252 local616 local615 local257 local256)
        Convert(local257 local258)
        Trigger(12)
        Trigger(13)
        Wait(12)
        Wait(13)
        Copy(local455 local523)
        Copy(c250 local524)
        Branch(0)
    Perch(6)
        Copy(local43 local465)
        Copy(local465.ForLoop-N local466)
        Copy(local465.Pass%2FFail local467)
        Copy(local465.RandNum local468)
        Copy(local465.LastColorIndex local469)
        Copy(local465.SpecialWordIndex local470)
        ArrayIndex(local468 local471 local469 )
        Xor(c472 local467 local662)
        BranchIfFalse(20 local662)
        Xor(c473 local467 local663)
        BranchIfFalse(21 local663)
        Branch(20)
    Perch(20)
        NumberToDecimalString(local471 local664 local474 )
        StringConcatenate(local480 c478 c475 local474 c476 c479 )
        Copy(c481 local496)
        Copy(local480 local497)
        Copy(c477 local498)
        Branch(19)
    Perch(21)
        ArrayConcatenate(local493 c492 c490 c489 c488 c487 c486 )
        ArrayIndex(local493 local494 local470 )
        StringConcatenate(local495 c482 local494 c483 c485 )
        Copy(c484 local496)
        Copy(local495 local497)
        Copy(c491 local498)
        Branch(19)
    Perch(19)
        And(local498 local55 local499)
        Increment(local466 local500 )
        BranchIfFalse(22 local499)
        Copy(local500 local501)
        Branch(23)
    Perch(22)
        Copy(local466 local501)
    Perch(23)
        Copy(local43 local511)
        Copy(local501 local511.ForLoop-N)
        Copy(local497 local511.Message)
        BranchIfFalse(24 local55)
        Copy(local496 local513)
        Branch(25)
    Perch(24)
        Copy(c512 local513)
    Perch(25)
        Copy(local511 local523)
        Copy(local513 local524)
        Branch(0)
    Perch(0)
        Copy(local523 local534)
        Copy(local534.ForLoop-N local535)
        Copy(local534.Message local536)
        Copy(local536 dataItem_MessageToPlayer)
        Decrement(local535 local539 )
        Copy(local539 dataItem_ColorsMemorized)
        // Code End
/* Clump Ended. */    )
    clump(1
        Copy(local88 local102)
        Copy(local566 local103)
        JavaScriptInvoke(local564 true local103 'PropertyNode_PropertyRead' local104 local88 local565)
        Copy(local103 local105)
        Copy(local105.status local106)
        Trigger(6)
        Trigger(7)
        Trigger(5)
        Wait(6)
        Wait(7)
        Wait(5)
        // Code End
/* Clump Ended. */    )
    clump(1
        IsGE(c89 c83 local561)
        BranchIfTrue(1 local561)
        Branch(2)
    Perch(2)
        Copy(c562 local90)
        Copy(c83 local91)
        Copy(c563 local99)
    Perch(3)
        Random(local94 )
        Mul(local94 c93 local95)
        Quotient(local95 c92 local96)
        Convert(local96 local98)
        ArrayConcatenate(local99 local99 local98 )
        Increment(local90 local90 )
        BranchIfGE(4 local90 local91)
        Branch(3)
    Perch(4)
        Copy(local99 local101)
        Branch(0)
    Perch(1)
        Copy(c100 local101)
        Branch(0)
    Perch(0)
        Trigger(5)
        Wait(5)
        // Code End
/* Clump Ended. */    )
    clump(2
        Copy(local43 local116)
        Copy(c82 local116.Sequence)
        Copy(c87 local116.UserInput)
        Copy(local104 local116.PaneColor)
        Copy(local101 local116.RandNum)
        Copy(c81 local116.ForLoop-N)
        Copy(c80 local116.LastColorIndex)
        Copy(c79 local116.Message)
        // Code End
/* Clump Ended. */    )
    clump(1
    Perch(3)
        Xor(c117 local106 local567)
        BranchIfFalse(1 local567)
        Xor(c118 local106 local568)
        BranchIfFalse(2 local568)
        Branch(3)
    Perch(1)
        Branch(0)
    Perch(2)
        Copy(local105 local119)
        Copy(local119.status local120)
        Copy(local119.code local121)
        Copy(local119.source local122)
        Copy(local569 local123)
        JavaScriptInvoke(local570 true * 'LogLabVIEWError' * local120 local121 local122)
        Branch(0)
    Perch(0)
        // Code End
/* Clump Ended. */    )
    clump(1
    Perch(3)
        Copy(local571 local124)
        CloseReference(local102 local124)
        Copy(local124 local125)
        Copy(local125.status local126)
        Xor(c127 local126 local572)
        BranchIfFalse(1 local572)
        Xor(c128 local126 local573)
        BranchIfFalse(2 local573)
        Branch(3)
    Perch(1)
        Branch(0)
    Perch(2)
        Copy(local125 local129)
        Copy(local129.status local130)
        Copy(local129.code local131)
        Copy(local129.source local132)
        Copy(local574 local133)
        JavaScriptInvoke(local575 true * 'LogLabVIEWError' * local130 local131 local132)
        Branch(0)
    Perch(0)
        // Code End
/* Clump Ended. */    )
    clump(1
        WaitMilliseconds(c197 * )
        // Code End
/* Clump Ended. */    )
    clump(1
    Perch(3)
        Copy(local196 local198)
        Copy(local586 local199)
        JavaScriptInvoke(local584 true local199 'PropertyNode_PropertyWrite' * local196 local585 local195)
        Copy(local588 local199)
        JavaScriptInvoke(local584 true local199 'PropertyNode_PropertyWrite' * local196 local587 local195)
        Copy(local199 local200)
        Copy(local200.status local201)
        Xor(c202 local201 local589)
        BranchIfFalse(1 local589)
        Xor(c203 local201 local590)
        BranchIfFalse(2 local590)
        Branch(3)
    Perch(1)
        Branch(0)
    Perch(2)
        Copy(local200 local204)
        Copy(local204.status local205)
        Copy(local204.code local206)
        Copy(local204.source local207)
        Copy(local591 local208)
        JavaScriptInvoke(local592 true * 'LogLabVIEWError' * local205 local206 local207)
        Branch(0)
    Perch(0)
        // Code End
/* Clump Ended. */    )
    clump(1
    Perch(3)
        Copy(local211 local224)
        Copy(local608 local225)
        JavaScriptInvoke(local606 true local225 'PropertyNode_PropertyWrite' * local211 local607 local214)
        Copy(local610 local225)
        JavaScriptInvoke(local606 true local225 'PropertyNode_PropertyWrite' * local211 local609 local214)
        Copy(local225 local226)
        Copy(local226.status local227)
        Xor(c228 local227 local611)
        BranchIfFalse(1 local611)
        Xor(c229 local227 local612)
        BranchIfFalse(2 local612)
        Branch(3)
    Perch(1)
        Branch(0)
    Perch(2)
        Copy(local226 local230)
        Copy(local230.status local231)
        Copy(local230.code local232)
        Copy(local230.source local233)
        Copy(local613 local234)
        JavaScriptInvoke(local614 true * 'LogLabVIEWError' * local231 local232 local233)
        Branch(0)
    Perch(0)
        // Code End
/* Clump Ended. */    )
    clump(1
    Perch(3)
        Xor(c217 local216 local602)
        BranchIfFalse(1 local602)
        Xor(c218 local216 local603)
        BranchIfFalse(2 local603)
        Branch(3)
    Perch(1)
        Branch(0)
    Perch(2)
        Copy(local215 local219)
        Copy(local219.status local220)
        Copy(local219.code local221)
        Copy(local219.source local222)
        Copy(local604 local223)
        JavaScriptInvoke(local605 true * 'LogLabVIEWError' * local220 local221 local222)
        Branch(0)
    Perch(0)
        // Code End
/* Clump Ended. */    )
    clump(1
        IsGE(c272 local248 local627)
        BranchIfTrue(1 local627)
        Branch(2)
    Perch(2)
        Copy(c628 local273)
        Copy(local248 local274)
        Copy(local43 local638)
    Perch(3)
        ArrayIndex(local246 local275 local273 )
        Trigger(14)
        Trigger(15)
        Wait(14)
        Wait(15)
        Copy(local273 local661)
        Increment(local273 local273 )
        BranchIfGE(4 local273 local274)
        BranchIfFalse(4 local408)
        Branch(3)
    Perch(4)
        Copy(local661 local434)
        Copy(local43 local444)
        Copy(local408 local445)
        Branch(0)
    Perch(1)
        Copy(c433 local434)
        Copy(c432 local444)
        Copy(c422 local445)
        Branch(0)
    Perch(0)
        Copy(local444 local455)
        Copy(local445 local455.Pass%2FFail)
        Copy(local434 local455.LastColorIndex)
        Copy(local258 local455.SpecialWordIndex)
        // Code End
/* Clump Ended. */    )
    clump(1
    Perch(3)
        Copy(local259 local262)
        Copy(local620 local261)
        JavaScriptInvoke(local621 true local261 'InvokeControlFunction' * local259 local622)
        Copy(local261 local263)
        Copy(local263.status local264)
        Xor(c265 local264 local623)
        BranchIfFalse(1 local623)
        Xor(c266 local264 local624)
        BranchIfFalse(2 local624)
        Branch(3)
    Perch(1)
        Branch(0)
    Perch(2)
        Copy(local263 local267)
        Copy(local267.status local268)
        Copy(local267.code local269)
        Copy(local267.source local270)
        Copy(local625 local271)
        JavaScriptInvoke(local626 true * 'LogLabVIEWError' * local268 local269 local270)
        Branch(0)
    Perch(0)
        // Code End
/* Clump Ended. */    )
    clump(1
    Perch(3)
        Copy(local409 local412)
        Copy(local654 local411)
        JavaScriptInvoke(local655 true local411 'InvokeControlFunction' * local409 local656)
        Copy(local411 local413)
        Copy(local413.status local414)
        Xor(c415 local414 local657)
        BranchIfFalse(1 local657)
        Xor(c416 local414 local658)
        BranchIfFalse(2 local658)
        Branch(3)
    Perch(1)
        Branch(0)
    Perch(2)
        Copy(local413 local417)
        Copy(local417.status local418)
        Copy(local417.code local419)
        Copy(local417.source local420)
        Copy(local659 local421)
        JavaScriptInvoke(local660 true * 'LogLabVIEWError' * local418 local419 local420)
        Branch(0)
    Perch(0)
        // Code End
/* Clump Ended. */    )
    clump(1
        WaitForEventsAndDispatch(* * c639 c640 local327 1)
        Branch(0)
    Perch(1)
        Copy(local327 local355)
        Copy(local355.Old%20Value local366)
        Copy(local355.New%20Value local377)
        Copy(dataItem_SelectColors local399)
        Branch(0)
    Perch(0)
        ClusterToArray(local400 local399 )
        ArrayLength(local400 local401 )
        IsGE(c402 local401 local648)
        BranchIfTrue(3 local648)
        Branch(4)
    Perch(4)
        Copy(c649 local403)
        Copy(local401 local404)
    Perch(5)
        ArrayIndex(local400 local405 local403 )
        Copy(local403 local650)
        Increment(local403 local403 )
        BranchIfGE(6 local403 local404)
        BranchIfTrue(6 local405)
        Branch(5)
    Perch(6)
        Copy(local650 local407)
        Branch(2)
    Perch(3)
        Copy(c406 local407)
        Branch(2)
    Perch(2)
        IsEQ(local275 local407 local408)
        // Code End
/* Clump Ended. */    )
)))
enqueue (WebApp%3A%3Aindex%2Egviweb)
//Finished!! :D
